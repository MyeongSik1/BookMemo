Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.choimyeongsik.BookBank\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher_new\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_new_foreground\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.contents_revise\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.MainActivity\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\"\r\n            android:windowSoftInputMode=\"adjustResize|adjustPan\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.book_search\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.book_information\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.book_record\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.ImageClickView\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"com.example.choimyeongsik.BookBank.contents_record\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity android:name=\"com.example.choimyeongsik.BookBank.Setting\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\"></activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.kakao.sdk.AppKey\"\r\n            android:value=\"@string/kakao_app_Key\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.ads.APPLICATION_ID\"\r\n            android:value=\"@string/admob_app_id\"/>\r\n\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.choimyeongsik.BookBank.provider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/provider\" />\r\n        </provider>\r\n    </application>\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\r\n    <uses-permission android:name=\"android.permission.VIBRATE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/AndroidManifest.xml	(date 1618047142992)
@@ -12,7 +12,7 @@
         android:usesCleartextTraffic="true">
 
         <activity
-            android:name="com.example.choimyeongsik.BookBank.contents_revise"
+            android:name="com.example.choimyeongsik.BookBank.ReviseActivity"
             android:theme="@style/AppTheme.NoActionBar" />
         <activity
             android:name="com.example.choimyeongsik.BookBank.MainActivity"
@@ -25,21 +25,21 @@
             </intent-filter>
         </activity>
         <activity
-            android:name="com.example.choimyeongsik.BookBank.book_search"
+            android:name="com.example.choimyeongsik.BookBank.BookSerachActivity"
             android:theme="@style/AppTheme.NoActionBar" />
         <activity
-            android:name="com.example.choimyeongsik.BookBank.book_information"
+            android:name="com.example.choimyeongsik.BookBank.BookInformationActivity"
             android:theme="@style/AppTheme.NoActionBar" />
         <activity
-            android:name="com.example.choimyeongsik.BookBank.book_record"
+            android:name="com.example.choimyeongsik.BookBank.BookRecordActivity"
             android:theme="@style/AppTheme.NoActionBar" />
         <activity
-            android:name="com.example.choimyeongsik.BookBank.ImageClickView"
+            android:name="com.example.choimyeongsik.BookBank.ImageClickActivity"
             android:theme="@style/AppTheme.NoActionBar" />
         <activity
-            android:name="com.example.choimyeongsik.BookBank.contents_record"
+            android:name="com.example.choimyeongsik.BookBank.RecordActivity"
             android:theme="@style/AppTheme.NoActionBar" />
-        <activity android:name="com.example.choimyeongsik.BookBank.Setting"
+        <activity android:name="com.example.choimyeongsik.BookBank.SettingActivity"
             android:theme="@style/AppTheme.NoActionBar"></activity>
 
         <meta-data
@@ -68,7 +68,6 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.GET_ACCOUNTS" />
     <uses-permission android:name="android.permission.VIBRATE" />
-
     <uses-permission android:name="android.permission.CAMERA" />
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/choimyeongsik/BookBank/ImageResizeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.util.Log;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\n\r\npublic class ImageResizeUtils {\r\n\r\n\r\n    public static void resizeFile(File file, File newFile, int newWidth, Boolean isCamera) {\r\n\r\n        String TAG = \"blackjin\";\r\n\r\n        Bitmap originalBm = null;\r\n        Bitmap resizedBitmap = null;\r\n\r\n        try {\r\n\r\n            BitmapFactory.Options options = new BitmapFactory.Options();\r\n            options.inPurgeable = true;\r\n            options.inDither = true;\r\n\r\n            originalBm = BitmapFactory.decodeFile(file.getAbsolutePath(), options);\r\n\r\n            if(isCamera) {\r\n\r\n                // 카메라인 경우 이미지를 상황에 맞게 회전시킨다\r\n                try {\r\n\r\n                    ExifInterface exif = new ExifInterface(file.getAbsolutePath());\r\n                    int exifOrientation = exif.getAttributeInt(\r\n                            ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\r\n                    int exifDegree = exifOrientationToDegrees(exifOrientation);\r\n                    Log.d(TAG,\"exifDegree : \" + exifDegree);\r\n\r\n                    originalBm = rotate(originalBm, exifDegree);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n\r\n            if(originalBm == null) {\r\n                Log.e(TAG,(\"파일 에러\"));\r\n                return;\r\n            }\r\n\r\n            int width = originalBm.getWidth();\r\n            int height = originalBm.getHeight();\r\n\r\n            float aspect, scaleWidth, scaleHeight;\r\n            if(width > height) {\r\n                if(width <= newWidth) return;\r\n\r\n                aspect = (float) width / height;\r\n\r\n                scaleWidth = newWidth;\r\n                scaleHeight = scaleWidth / aspect;\r\n\r\n            } else {\r\n\r\n                if(height <= newWidth) return;\r\n\r\n                aspect = (float) height / width;\r\n\r\n                scaleHeight = newWidth;\r\n                scaleWidth = scaleHeight / aspect;\r\n\r\n            }\r\n\r\n            // create a matrix for the manipulation\r\n            Matrix matrix = new Matrix();\r\n\r\n            // resize the bitmap\r\n            matrix.postScale(scaleWidth / width, scaleHeight / height);\r\n\r\n            // recreate the new Bitmap\r\n            resizedBitmap = Bitmap.createBitmap(originalBm, 0, 0, width, height, matrix, true);\r\n\r\n            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\r\n\r\n                resizedBitmap.compress(Bitmap.CompressFormat.JPEG, 80, new FileOutputStream(newFile));\r\n\r\n            } else {\r\n\r\n                resizedBitmap.compress(Bitmap.CompressFormat.PNG, 80, new FileOutputStream(newFile));\r\n\r\n            }\r\n\r\n\r\n        } catch (FileNotFoundException e) {\r\n\r\n            e.printStackTrace();\r\n\r\n        } finally {\r\n\r\n            if(originalBm != null){\r\n                originalBm.recycle();\r\n            }\r\n\r\n            if (resizedBitmap != null){\r\n                resizedBitmap.recycle();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * EXIF 정보를 회전각도로 변환하는 메서드\r\n     *\r\n     * @param exifOrientation EXIF 회전각\r\n     * @return 실제 각도\r\n     */\r\n    public static int exifOrientationToDegrees(int exifOrientation)\r\n    {\r\n        if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_90)\r\n        {\r\n            return 90;\r\n        }\r\n        else if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_180)\r\n        {\r\n            return 180;\r\n        }\r\n        else if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_270)\r\n        {\r\n            return 270;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 이미지를 회전시킵니다.\r\n     *\r\n     * @param bitmap 비트맵 이미지\r\n     * @param degrees 회전 각도\r\n     * @return 회전된 이미지\r\n     */\r\n    public static Bitmap rotate(Bitmap bitmap, int degrees)\r\n    {\r\n        if(degrees != 0 && bitmap != null)\r\n        {\r\n            Matrix m = new Matrix();\r\n            m.setRotate(degrees, (float) bitmap.getWidth() / 2,\r\n                    (float) bitmap.getHeight() / 2);\r\n\r\n            try\r\n            {\r\n                Bitmap converted = Bitmap.createBitmap(bitmap, 0, 0,\r\n                        bitmap.getWidth(), bitmap.getHeight(), m, true);\r\n                if(bitmap != converted)\r\n                {\r\n                    bitmap.recycle();\r\n                    bitmap = converted;\r\n                }\r\n            }\r\n            catch(OutOfMemoryError ex)\r\n            {\r\n                // 메모리가 부족하여 회전을 시키지 못할 경우 그냥 원본을 반환합니다.\r\n            }\r\n        }\r\n        return bitmap;\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/ImageResizeUtils.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/Utils/ImageResizeUtils.java	(date 1618047143029)
@@ -1,15 +1,33 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.Utils;
 
+import android.content.Context;
+import android.content.Intent;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Matrix;
 import android.media.ExifInterface;
+import android.os.Bundle;
 import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
 
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.util.ArrayList;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 public class ImageResizeUtils {
 
@@ -29,7 +47,7 @@
 
             originalBm = BitmapFactory.decodeFile(file.getAbsolutePath(), options);
 
-            if(isCamera) {
+            if (isCamera) {
 
                 // 카메라인 경우 이미지를 상황에 맞게 회전시킨다
                 try {
@@ -38,7 +56,7 @@
                     int exifOrientation = exif.getAttributeInt(
                             ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
                     int exifDegree = exifOrientationToDegrees(exifOrientation);
-                    Log.d(TAG,"exifDegree : " + exifDegree);
+                    Log.d(TAG, "exifDegree : " + exifDegree);
 
                     originalBm = rotate(originalBm, exifDegree);
 
@@ -48,8 +66,8 @@
 
             }
 
-            if(originalBm == null) {
-                Log.e(TAG,("파일 에러"));
+            if (originalBm == null) {
+                Log.e(TAG, ("파일 에러"));
                 return;
             }
 
@@ -57,8 +75,8 @@
             int height = originalBm.getHeight();
 
             float aspect, scaleWidth, scaleHeight;
-            if(width > height) {
-                if(width <= newWidth) return;
+            if (width > height) {
+                if (width <= newWidth) return;
 
                 aspect = (float) width / height;
 
@@ -67,7 +85,7 @@
 
             } else {
 
-                if(height <= newWidth) return;
+                if (height <= newWidth) return;
 
                 aspect = (float) height / width;
 
@@ -102,11 +120,11 @@
 
         } finally {
 
-            if(originalBm != null){
+            if (originalBm != null) {
                 originalBm.recycle();
             }
 
-            if (resizedBitmap != null){
+            if (resizedBitmap != null) {
                 resizedBitmap.recycle();
             }
         }
@@ -119,18 +137,12 @@
      * @param exifOrientation EXIF 회전각
      * @return 실제 각도
      */
-    public static int exifOrientationToDegrees(int exifOrientation)
-    {
-        if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_90)
-        {
+    public static int exifOrientationToDegrees(int exifOrientation) {
+        if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_90) {
             return 90;
-        }
-        else if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_180)
-        {
+        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_180) {
             return 180;
-        }
-        else if(exifOrientation == ExifInterface.ORIENTATION_ROTATE_270)
-        {
+        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_270) {
             return 270;
         }
         return 0;
@@ -139,33 +151,29 @@
     /**
      * 이미지를 회전시킵니다.
      *
-     * @param bitmap 비트맵 이미지
+     * @param bitmap  비트맵 이미지
      * @param degrees 회전 각도
      * @return 회전된 이미지
      */
-    public static Bitmap rotate(Bitmap bitmap, int degrees)
-    {
-        if(degrees != 0 && bitmap != null)
-        {
+    public static Bitmap rotate(Bitmap bitmap, int degrees) {
+        if (degrees != 0 && bitmap != null) {
             Matrix m = new Matrix();
             m.setRotate(degrees, (float) bitmap.getWidth() / 2,
                     (float) bitmap.getHeight() / 2);
 
-            try
-            {
+            try {
                 Bitmap converted = Bitmap.createBitmap(bitmap, 0, 0,
                         bitmap.getWidth(), bitmap.getHeight(), m, true);
-                if(bitmap != converted)
-                {
+                if (bitmap != converted) {
                     bitmap.recycle();
                     bitmap = converted;
                 }
-            }
-            catch(OutOfMemoryError ex)
-            {
+            } catch (OutOfMemoryError ex) {
                 // 메모리가 부족하여 회전을 시키지 못할 경우 그냥 원본을 반환합니다.
             }
         }
         return bitmap;
     }
-}
\ No newline at end of file
+}
+
+
Index: app/src/main/java/com/example/choimyeongsik/BookBank/ImageClickView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\n\r\n\r\nimport com.github.chrisbanes.photoview.PhotoView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\npublic class ImageClickView extends AppCompatActivity {\r\n    PhotoView view;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_image_click_view);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_imageview);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setTitle(\"\");\r\n        Intent intent = getIntent(); /*데이터 수신*/\r\n        byte[] arr = getIntent().getByteArrayExtra(\"image\");\r\n        Bitmap image = BitmapFactory.decodeByteArray(arr, 0, arr.length);\r\n        view = (PhotoView) findViewById(R.id.clickview);\r\n        view.setImageBitmap(image);\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home: { //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/ImageClickView.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/ImageClickActivity.java	(date 1618046786847)
@@ -13,7 +13,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 
-public class ImageClickView extends AppCompatActivity {
+public class ImageClickActivity extends AppCompatActivity {
     PhotoView view;
 
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/book_record.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class book_record extends AppCompatActivity {\r\n    public static final int REQUEST_CODE_WRITE = 1003;\r\n    public static final int REQUEST_CODE_RECORD= 1004;\r\nButton record_button;\r\n    ImageView imageView;\r\n    TextView title;\r\n    Button record_delete;\r\n    String title_;\r\n    public RecyclerView recyclerView;\r\n    public RecordAdapter adapter;\r\n    public Record_Item record_item;\r\n    public ArrayList<Record_Item> mitems;\r\n    TextView textView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_book_record);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_record);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setTitle(\"\");\r\n        title = (TextView)findViewById(R.id.title);\r\n        imageView = (ImageView)findViewById(R.id.thumbnail);\r\n        record_delete = (Button)findViewById(R.id.record_dele);\r\n        Intent intent = getIntent();\r\n        title_ = intent.getExtras().getString(\"title\");\r\n        String thumbnail = intent.getExtras().getString(\"thumbnail\");\r\n\r\n        title.setText(title_);\r\n        Glide.with(imageView).load(thumbnail).override(300,300).into(imageView);\r\n\r\n\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);           // 리사이클러뷰 데이터 역순으로 뿌리기\r\n        linearLayoutManager.setReverseLayout(true);\r\n        linearLayoutManager.setStackFromEnd(true);\r\n        recyclerView = (RecyclerView) findViewById(R.id.record_Recycler);\r\n        recyclerView.setLayoutManager(linearLayoutManager);\r\n        mitems = new ArrayList<Record_Item>();\r\n        adapter = new RecordAdapter(getApplicationContext(),mitems);\r\n        recyclerView.addItemDecoration(new DividerItemDecoration(getApplicationContext(), DividerItemDecoration.VERTICAL));\r\n       recyclerView.setAdapter(adapter);\r\n        cursorArray();\r\n        adapter.notifyDataSetChanged();\r\n         textView = (TextView)findViewById(R.id.memocount);\r\n            int asd = adapter.getItemCount();\r\n            textView.setText( String.valueOf(asd));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        record_button = (Button)findViewById(R.id.record_button);\r\n        record_button.setOnClickListener(new View.OnClickListener() {       // 글작성\r\n            @Override\r\n            public void onClick(View view) {\r\n                String title = title_;\r\n                Intent intent = new Intent(getApplicationContext(),contents_record.class);\r\n                intent.putExtra(\"title\", title);\r\n                startActivityForResult(intent,REQUEST_CODE_WRITE );\r\n\r\n            }\r\n        });\r\n\r\n        record_delete.setOnClickListener(new View.OnClickListener() {       // 책삭제\r\n            @Override\r\n            public void onClick(View v) {\r\n                Cursor cs = null;\r\n                BookDatabase helper = new BookDatabase(getApplication());\r\n                SQLiteDatabase db = helper.getWritableDatabase();\r\n                db.execSQL(\"DELETE FROM tb_book WHERE title = '\" + title_ + \"';\");\r\n                BookDatabase helper2 = new BookDatabase(getApplication());\r\n                SQLiteDatabase db2 = helper2.getWritableDatabase();\r\n                db2.execSQL(\"DELETE FROM tb_book WHERE name = '\" + title_ + \"';\");\r\n                Fragmentlibrary fragmentlibrary = new Fragmentlibrary();\r\n\r\n              finish();\r\n\r\n\r\n            }\r\n        });\r\n        // 리사이클러뷰 클릭이벤트\r\n         recyclerView.addOnItemTouchListener(new book_search.RecyclerTouchListener(getApplicationContext(), recyclerView, new book_search.ClickListener() {\r\n             @Override\r\n             public void onClick(View view, int postion) {\r\n                 String number = mitems.get(postion).getNumber();\r\n                Intent intent1 = new Intent(getApplicationContext(), contents_revise.class);\r\n                intent1.putExtra(\"number\",number);\r\n                startActivityForResult(intent1,REQUEST_CODE_RECORD);\r\n             }\r\n\r\n             @Override\r\n             public void onLongClick(View view, int postion) {\r\n\r\n             }\r\n         }));\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public void cursorArray() {\r\n\r\n        Cursor cs = null;\r\n        BookDatabase helper = new BookDatabase(getApplication());\r\n        SQLiteDatabase db = helper.getWritableDatabase();\r\n        cs=   db.rawQuery(\"SELECT contents, name, image, _id FROM tb_book\", null);\r\n\r\n\r\n        while (cs.moveToNext()) {\r\n            String na = cs.getString(cs.getColumnIndex(\"name\"));\r\n            if(title_.equals(na)) {\r\n                record_item = new Record_Item(\r\n                        cs.getString(cs.getColumnIndex(\"name\")),\r\n                        cs.getString(cs.getColumnIndex(\"contents\")),\r\n                        cs.getBlob(cs.getColumnIndex(\"image\")),\r\n                        cs.getString(cs.getColumnIndex(\"_id\")));\r\n                mitems.add(record_item);\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n        cs.close();\r\n        db.close();\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_CODE_WRITE) {\r\n           content_update();\r\n        }\r\n        if (requestCode == REQUEST_CODE_RECORD) {\r\n            content_update();\r\n        }\r\n    }\r\n    public void content_update() { // 되돌아왔을때 다시뿌리기\r\n        mitems = new ArrayList<Record_Item>();\r\n        adapter = new RecordAdapter(getApplicationContext(),mitems);\r\n        recyclerView.setAdapter(adapter);\r\n        cursorArray();\r\n        adapter.notifyDataSetChanged();\r\n        int asd = adapter.getItemCount();\r\n        textView.setText( String.valueOf(asd));\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case android.R.id.home:{ //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n}\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/book_record.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/BookRecordActivity.java	(date 1618046786802)
@@ -13,6 +13,10 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.DB.BookDatabase;
+import com.example.choimyeongsik.BookBank.Fragment.Fragmentlibrary;
+import com.example.choimyeongsik.BookBank.adapter.RecordAdapter;
+import com.example.choimyeongsik.BookBank.model.RecordVo;
 
 import java.util.ArrayList;
 
@@ -23,7 +27,7 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-public class book_record extends AppCompatActivity {
+public class BookRecordActivity extends AppCompatActivity {
     public static final int REQUEST_CODE_WRITE = 1003;
     public static final int REQUEST_CODE_RECORD= 1004;
 Button record_button;
@@ -33,8 +37,8 @@
     String title_;
     public RecyclerView recyclerView;
     public RecordAdapter adapter;
-    public Record_Item record_item;
-    public ArrayList<Record_Item> mitems;
+    public RecordVo record_item;
+    public ArrayList<RecordVo> mitems;
     TextView textView;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -62,7 +66,7 @@
         linearLayoutManager.setStackFromEnd(true);
         recyclerView = (RecyclerView) findViewById(R.id.record_Recycler);
         recyclerView.setLayoutManager(linearLayoutManager);
-        mitems = new ArrayList<Record_Item>();
+        mitems = new ArrayList<RecordVo>();
         adapter = new RecordAdapter(getApplicationContext(),mitems);
         recyclerView.addItemDecoration(new DividerItemDecoration(getApplicationContext(), DividerItemDecoration.VERTICAL));
        recyclerView.setAdapter(adapter);
@@ -83,7 +87,7 @@
             @Override
             public void onClick(View view) {
                 String title = title_;
-                Intent intent = new Intent(getApplicationContext(),contents_record.class);
+                Intent intent = new Intent(getApplicationContext(), RecordActivity.class);
                 intent.putExtra("title", title);
                 startActivityForResult(intent,REQUEST_CODE_WRITE );
 
@@ -100,7 +104,7 @@
                 BookDatabase helper2 = new BookDatabase(getApplication());
                 SQLiteDatabase db2 = helper2.getWritableDatabase();
                 db2.execSQL("DELETE FROM tb_book WHERE name = '" + title_ + "';");
-                Fragmentlibrary fragmentlibrary = new Fragmentlibrary();
+              Fragmentlibrary fragmentlibrary = new Fragmentlibrary();
 
               finish();
 
@@ -108,11 +112,11 @@
             }
         });
         // 리사이클러뷰 클릭이벤트
-         recyclerView.addOnItemTouchListener(new book_search.RecyclerTouchListener(getApplicationContext(), recyclerView, new book_search.ClickListener() {
+         recyclerView.addOnItemTouchListener(new BookSerachActivity.RecyclerTouchListener(getApplicationContext(), recyclerView, new BookSerachActivity.ClickListener() {
              @Override
              public void onClick(View view, int postion) {
                  String number = mitems.get(postion).getNumber();
-                Intent intent1 = new Intent(getApplicationContext(), contents_revise.class);
+                Intent intent1 = new Intent(getApplicationContext(), ReviseActivity.class);
                 intent1.putExtra("number",number);
                 startActivityForResult(intent1,REQUEST_CODE_RECORD);
              }
@@ -144,7 +148,7 @@
         while (cs.moveToNext()) {
             String na = cs.getString(cs.getColumnIndex("name"));
             if(title_.equals(na)) {
-                record_item = new Record_Item(
+                record_item = new RecordVo(
                         cs.getString(cs.getColumnIndex("name")),
                         cs.getString(cs.getColumnIndex("contents")),
                         cs.getBlob(cs.getColumnIndex("image")),
@@ -170,7 +174,7 @@
         }
     }
     public void content_update() { // 되돌아왔을때 다시뿌리기
-        mitems = new ArrayList<Record_Item>();
+        mitems = new ArrayList<RecordVo>();
         adapter = new RecordAdapter(getApplicationContext(),mitems);
         recyclerView.setAdapter(adapter);
         cursorArray();
Index: app/src/main/java/com/example/choimyeongsik/BookBank/contents_record.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.FileProvider;\r\n\r\npublic class contents_record extends AppCompatActivity {\r\n    EditText editText;\r\n    Button write_button;\r\n    Button camera;\r\n    Button gild;\r\n\r\n    private Boolean isCamera = false;\r\n    final static int IMAGE_PICK=300;\r\n    final static int IMAGE_CAMEAR=400;\r\n    private File tempFile;\r\n    private Uri photoUri;\r\n    private Bitmap originalBm;\r\n    ImageView imageView1;\r\n    private  Boolean isImage = false;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_contents_record);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_content);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        Intent intent = getIntent();\r\n        final String title_ = intent.getExtras().getString(\"title\");\r\n        editText = (EditText)findViewById(R.id.record_contents);\r\n        write_button = (Button)findViewById(R.id.contents_button);\r\n        gild = (Button)findViewById(R.id.gild);\r\n        camera = (Button)findViewById(R.id.camear);\r\n        imageView1 = (ImageView)findViewById(R.id.imageview1);\r\n\r\n        write_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String contents1 = editText.getText().toString().trim();\r\n                BookDatabase bookDatabase = new BookDatabase(getApplication());\r\n                SQLiteDatabase db = bookDatabase.getWritableDatabase();\r\n                ContentValues cv = new ContentValues();\r\n                if (isImage) {         // 이미지 저장할땐 ContenValues 사용\r\n                    ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n                    originalBm.compress(Bitmap.CompressFormat.PNG, 100, out);\r\n                    cv.put(\"image\", out.toByteArray());\r\n                    cv.put(\"name\", title_);\r\n                    cv.put(\"contents\", contents1);\r\n                    db.insert(\"tb_book\", null, cv);\r\n                    db.close();\r\n                    finish();\r\n                } else {\r\n                    cv.put(\"name\", title_);\r\n                    cv.put(\"contents\", contents1);\r\n                    db.insert(\"tb_book\", null, cv);\r\n                    db.close();\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        camera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isImage = true;\r\n                takePhoto();\r\n            }\r\n        });\r\n\r\n        gild.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isImage = true;\r\n                isCamera = false;\r\n                Intent intent = new Intent(Intent.ACTION_PICK);\r\n                intent.setType(MediaStore.Images.Media.CONTENT_TYPE);\r\n                startActivityForResult(intent, IMAGE_PICK);\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != Activity.RESULT_OK) {\r\n            // 카메라 or 갤러리에서 취소하였을때\r\n            isImage = false;\r\n            if (tempFile != null) {\r\n                if (tempFile.exists()) {\r\n                    if (tempFile.delete()) {\r\n                        Log.e(\"GD\", tempFile.getAbsolutePath() + \" 삭제 성공\");\r\n                        tempFile = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (requestCode == IMAGE_PICK) {\r\n\r\n            photoUri = data.getData();\r\n\r\n            Cursor cursor = null;\r\n\r\n            try {\r\n\r\n                /*\r\n                 *  Uri 스키마를\r\n                 *  content:/// 에서 file:/// 로  변경한다.\r\n                 */\r\n                String[] proj = {MediaStore.Images.Media.DATA};\r\n\r\n                assert photoUri != null;\r\n                cursor = getContentResolver().query(photoUri, proj, null, null, null);\r\n\r\n                assert cursor != null;\r\n                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\r\n\r\n                cursor.moveToFirst();\r\n\r\n                tempFile = new File(cursor.getString(column_index));\r\n\r\n            } finally {\r\n                if (cursor != null) {\r\n                    cursor.close();\r\n                }\r\n            }\r\n\r\n            setImage();\r\n\r\n        } else if (requestCode == IMAGE_CAMEAR) {\r\n            setImage();\r\n        }\r\n    }\r\n\r\n    private void setImage() {\r\n        ImageResizeUtils.resizeFile(tempFile, tempFile, 1280, isCamera);\r\n\r\n        BitmapFactory.Options options = new BitmapFactory.Options();\r\n        originalBm = BitmapFactory.decodeFile(tempFile.getAbsolutePath(), options);\r\n        Log.d(\"GD\", \"setImage : \" + tempFile.getAbsolutePath());\r\n\r\n\r\n\r\n        imageView1.setVisibility(View.VISIBLE);\r\n        imageView1.setImageBitmap(originalBm);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void takePhoto() {\r\n        isCamera = true;\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n\r\n        try {\r\n            tempFile = createImageFile();\r\n        } catch (IOException e) {\r\n            Toast.makeText(this, \"이미지 처리 오류! 다시 시도해주세요.\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            e.printStackTrace();\r\n        }\r\n        if (tempFile != null) {\r\n\r\n            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\r\n\r\n                photoUri = FileProvider.getUriForFile(this,\r\n                        \"com.example.choimyeongsik.myapplication.provider\", tempFile);\r\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);\r\n                startActivityForResult(intent, IMAGE_CAMEAR);\r\n\r\n            } else {\r\n\r\n                photoUri = Uri.fromFile(tempFile);\r\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);\r\n                startActivityForResult(intent, IMAGE_CAMEAR);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private File createImageFile() throws IOException {\r\n\r\n        // 이미지 파일 이름\r\n        String timeStamp = new SimpleDateFormat(\"HHmmss\").format(new Date());\r\n        String imageFileName = \"Largo_\" + timeStamp + \"_\";\r\n\r\n        // 이미지가 저장될 폴더 이름\r\n        File storageDir = new File(Environment.getExternalStorageDirectory() + \"/Largo/\");\r\n        if (!storageDir.exists()) storageDir.mkdirs();\r\n\r\n        // 빈 파일 생성\r\n        File image = File.createTempFile(imageFileName, \".jpg\", storageDir);\r\n\r\n        return image;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case android.R.id.home:{\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/contents_record.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/RecordActivity.java	(date 1618047143246)
@@ -20,6 +20,9 @@
 import android.widget.ImageView;
 import android.widget.Toast;
 
+import com.example.choimyeongsik.BookBank.DB.BookDatabase;
+import com.example.choimyeongsik.BookBank.Utils.ImageResizeUtils;
+
 import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.IOException;
@@ -30,12 +33,13 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.core.content.FileProvider;
 
-public class contents_record extends AppCompatActivity {
+public class RecordActivity extends AppCompatActivity {
     EditText editText;
     Button write_button;
     Button camera;
     Button gild;
 
+
     private Boolean isCamera = false;
     final static int IMAGE_PICK=300;
     final static int IMAGE_CAMEAR=400;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/book_information.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Color;\r\nimport android.os.AsyncTask;\r\n\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.github.mikephil.charting.charts.BarChart;\r\nimport com.github.mikephil.charting.components.Description;\r\nimport com.github.mikephil.charting.components.XAxis;\r\nimport com.github.mikephil.charting.data.BarData;\r\nimport com.github.mikephil.charting.data.BarDataSet;\r\nimport com.github.mikephil.charting.data.BarEntry;\r\nimport com.github.mikephil.charting.formatter.IndexAxisValueFormatter;\r\nimport com.github.mikephil.charting.formatter.ValueFormatter;\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.select.Elements;\r\nimport org.w3c.dom.Document;\r\nimport org.w3c.dom.Node;\r\nimport org.w3c.dom.NodeList;\r\nimport org.xml.sax.InputSource;\r\n\r\nimport java.net.URL;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\nimport javax.xml.parsers.DocumentBuilder;\r\nimport javax.xml.parsers.DocumentBuilderFactory;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\n\r\npublic class book_information extends AppCompatActivity implements View.OnClickListener {\r\n    TextView text_title;\r\n    TextView text_sale_price;\r\n    TextView text_datatime;\r\n    TextView text_authors;\r\n    ImageView image_thumbnail;\r\n    TextView Genre;\r\n    Button load_button;\r\n    String category;\r\n    String bookurl;\r\n    TextView introduction;\r\n    TextView Toc;\r\n    TextView review;\r\n    TextView inbook;\r\n    ImageView see4;\r\n    ImageView see1;\r\n    ImageView see2;\r\n    ImageView see3;\r\n    TextView exist;\r\n\r\n\r\n    private   BarChart barChart;\r\n    int[] to2 = new int[8];\r\n    private String[] St = new String[8];\r\n    private String[] Ge = new String[8];\r\n    private int a;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_book_information);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_information);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        Intent intent = getIntent(); /*데이터 수신*/\r\n        final String name = intent.getExtras().getString(\"title\");\r\n        String sale_price = intent.getExtras().getString(\"sale_price\");\r\n        String datatime = intent.getExtras().getString(\"datatime\");\r\n        final String thumbnail = intent.getExtras().getString(\"thumbnail\");\r\n        final String authors = intent.getExtras().getString(\"authors\");\r\n        final String main_publisher = intent.getExtras().getString(\"main_publisher\");\r\n        final String isbn = intent.getExtras().getString(\"isbn\");\r\n        bookurl = intent.getExtras().getString(\"url\");\r\n\r\n\r\n        Genre = (TextView) findViewById(R.id.Genre);\r\n        text_authors = (TextView) findViewById(R.id.main_authors);\r\n        text_datatime = (TextView) findViewById(R.id.datatime);\r\n        text_sale_price = (TextView) findViewById(R.id.main_price);\r\n        text_title = (TextView) findViewById(R.id.main_title);\r\n        image_thumbnail = (ImageView) findViewById(R.id.main_image);\r\n\r\n        introduction = (TextView) findViewById(R.id.Introduction);\r\n        Toc = (TextView) findViewById(R.id.Toc);\r\n        review = (TextView) findViewById(R.id.review);\r\n        inbook = (TextView) findViewById(R.id.inbook);\r\n        exist = (TextView)findViewById(R.id.exist);\r\n        see1 = (ImageView) findViewById(R.id.see1);\r\n        see2 = (ImageView) findViewById(R.id.see2);\r\n        see3 = (ImageView) findViewById(R.id.see3);\r\n        see4 = (ImageView) findViewById(R.id.see4);\r\n        barChart = (BarChart) findViewById(R.id.barChart);\r\n        introduction.setMaxLines(8);\r\n        Toc.setMaxLines(8);\r\n        review.setMaxLines(8);\r\n        barChart.setHighlightPerTapEnabled(false);\r\n        barChart.getAxisRight().setEnabled(false);\r\n        barChart.setScaleEnabled(false);\r\n        barChart.getLegend().setEnabled(false);\r\n        barChart.setTouchEnabled(true);\r\n        barChart.setDragEnabled(false);\r\n        barChart.setScaleEnabled(false);\r\n        barChart.setScaleXEnabled(false);\r\n        barChart.setScaleYEnabled(false);\r\n        barChart.setPinchZoom(false);\r\n        barChart.setHighlightPerDragEnabled(false);\r\n        barChart.setHighlightPerTapEnabled(false);\r\n        barChart.setDrawGridBackground(false);\r\n        barChart.setGridBackgroundColor(Color.rgb(255, 255, 255));\r\n        barChart.getXAxis().setGridColor(Color.rgb(255, 255, 255));\r\n\r\n        load_button = (Button) findViewById(R.id.load);\r\n\r\n        if (isbn == null) {\r\n            Genre.setText(\"분류 안됨\");                            // 도서 장르 분류\r\n        } else {\r\n            String isbnurl = \"https://www.bookoob.co.kr/\" + isbn;\r\n            try {\r\n                String isbn1 = new Background().execute(isbnurl).get();\r\n                if (TextUtils.isEmpty(isbn1)) {    // 반환받은 값이 null일경우\r\n                    Genre.setText(\"분류 안됨\");\r\n                } else {\r\n                    String isbn3 = isbn1.substring(isbn1.indexOf(\"\"), isbn1.indexOf(\">\"));\r\n                    category = isbn3;\r\n                    Genre.setText(isbn1);\r\n                }\r\n\r\n            } catch (ExecutionException e) {\r\n                e.printStackTrace();\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        String dataTime = datatime.substring(0, 10);\r\n        int to = Integer.parseInt(sale_price);\r\n        DecimalFormat decimalFormat = new DecimalFormat(\"#,##0\");\r\n        final String pr = decimalFormat.format(to);\r\n        String te = \"-1\";\r\n\r\n        if (te.equals(pr)) {\r\n            text_sale_price.setText(\"정상판매 X\");\r\n        } else {\r\n            text_sale_price.setText(pr);\r\n        }\r\n        text_title.setText(name);\r\n        //  text_main_publisher.setText(main_publisher);\r\n        text_datatime.setText(dataTime);\r\n        text_authors.setText(authors);\r\n        Glide.with(getApplicationContext()).load(thumbnail).error(R.mipmap.ic_launcher).override(600, 600).into(image_thumbnail);\r\n\r\n        DataTask dataTask = new DataTask();    // 책소개 파싱\r\n        dataTask.execute();\r\n        String Graphurl = \"http://data4library.kr/api/usageAnalysisList?authKey=01ac025572c930c78ee563df2ff9829e85be0b408ad7786afa0b1a2e40709aba &isbn13=\" + isbn;\r\n        Statistics task1 = new Statistics(); // 독자 데이터 파싱\r\n        task1.execute(Graphurl);\r\n\r\n\r\n\r\n        introduction.setOnClickListener(this);\r\n        Toc.setOnClickListener( this);\r\n        review.setOnClickListener(this);\r\n        inbook.setOnClickListener( this);\r\n        see1.setOnClickListener(this);\r\n        see2.setOnClickListener(this);\r\n        see3.setOnClickListener(this);\r\n        see4.setOnClickListener(this);\r\n\r\n\r\n        load_button.setOnClickListener(new View.OnClickListener() {          // 책저장( 중복확인)\r\n            @Override\r\n            public void onClick(View view) {\r\n                BookDatabase bookDatabase = new BookDatabase(getApplication());\r\n                SQLiteDatabase db = bookDatabase.getWritableDatabase();\r\n\r\n                String sql = \"SELECT title FROM \"+ \"tb_book\" + \" WHERE title = '\" + name + \"'\";\r\n                Cursor cu = db.rawQuery(sql, null);\r\n                if (cu.getCount() != 1) {\r\n                    db.execSQL(\"insert into tb_book ( title, pirce, authors, publisher, category, thumbnail, isbn) values (?,?,?,?,?,?,?)\", new String[]{ name, pr, authors, main_publisher, category, thumbnail, isbn});\r\n                    Toast toast = Toast.makeText(book_information.this, \"등록 완료\", Toast.LENGTH_SHORT);\r\n                    toast.show();\r\n                } else {\r\n                    Toast toast = Toast.makeText(book_information.this, \"이미 등록된 책입니다\", Toast.LENGTH_SHORT);\r\n                    toast.show();\r\n                }\r\n                db.close();\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {            // 텍스트나 아래이미지 눌렀을경우 텍스트 늘리기\r\n        switch (v.getId()) {\r\n            case R.id.see1:\r\n                MoreText(introduction,see1);\r\n                break;\r\n            case R.id.Introduction:\r\n                MoreText(introduction,see1);\r\n                break;\r\n            case R.id.see2:\r\n                MoreText(Toc,see2);\r\n                break;\r\n            case R.id.Toc:\r\n                MoreText(Toc,see2);\r\n                break;\r\n            case R.id.see3:\r\n                MoreText(review,see3);\r\n                break;\r\n            case R.id.review:\r\n                MoreText(review,see3);\r\n                break;\r\n            case R.id.see4:\r\n                MoreText(inbook,see4);\r\n                break;\r\n            case R.id.inbook:\r\n                MoreText(inbook,see4);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    class DataTask extends AsyncTask<String[], Void, String[]> { // 책 자료 파싱\r\n\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String[] s) {\r\n            super.onPostExecute(s);\r\n            Toc.setText(s[1]);\r\n            introduction.setText(s[0]);\r\n            review.setText(s[2]);\r\n            inbook.setText((s[3]));\r\n            inbook.setMaxLines(8);\r\n            introduction.setMaxLines(8);\r\n            Toc.setMaxLines(8);\r\n            review.setMaxLines(8);\r\n        }\r\n\r\n        @Override\r\n        protected String[] doInBackground(String[]... strings) {\r\n            int own = 0;\r\n            int inbo = 0;\r\n            int revi = 0;\r\n\r\n            try {\r\n                org.jsoup.nodes.Document doc = Jsoup.connect(bookurl).get();\r\n                doc.outputSettings().prettyPrint(false);\r\n                Elements contents3 = doc.select(\"h3.tit\");\r\n\r\n                for (int i = 1; i <= contents3.size(); i++) {\r\n                    if (contents3.get(i).ownText().equals(\"목차\")) {\r\n                        own = i;\r\n\r\n                    }\r\n                    if(contents3.get(i).ownText().equals(\"책 속으로\")) {\r\n                        inbo = i;\r\n\r\n                    }\r\n                    if(contents3.get(i).ownText().equals(\"출판사서평\")) {\r\n                        revi = i;\r\n\r\n                    }\r\n                    if(i == contents3.size() -1) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                Elements contents = doc.select(\"p.desc\").eq(0); // 책소개\r\n                Elements contents4 = doc.select(\"p.desc\").eq(own); // 목차\r\n                Elements contents5 = doc.select(\"p.desc\").eq(inbo); // 책 속으로\r\n                Elements contents6 = doc.select(\"p.desc\").eq(revi); // 출판사 서평\r\n                String text5 = tagdel(contents5);\r\n                String text = tagdel(contents);\r\n                String text2 = tagdel(contents4);\r\n                String text3 = tagdel(contents6);\r\n\r\n                String text4[] = {text, text2, text3, text5};\r\n                return text4;\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    class Statistics extends AsyncTask <String, Void, Document> {       // 독자 분석\r\n        @Override\r\n        protected void onPostExecute(Document document) {\r\n            super.onPostExecute(document);\r\n            ArrayList xVals = new ArrayList();\r\n            ArrayList yVals1 = new ArrayList();\r\n            if ( to2[2] == 0) {      // 독자 데이터가 없을경우\r\n                exist.setVisibility(View.VISIBLE);\r\n            } else {\r\n                barChart.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n\r\n            for(int i=0; i<to2.length; i++) {\r\n                a += to2[i];\r\n            }\r\n            for (int z = 0; z < to2.length; z++) {\r\n                if (to2[z] != 0) {\r\n                    Log.d(\"나왔다\", \"왓어5\");\r\n                    double d = (double) to2[z] / (double) a * 100 ;   // Percent\r\n                    xVals.add(St[z]+Ge[z]);\r\n                    yVals1.add(new BarEntry(z, Math.round(d)));\r\n                }\r\n            }\r\n            BarDataSet set = new BarDataSet(yVals1, \"A\");\r\n            BarData data = new BarData(set);\r\n            Description des = barChart.getDescription();\r\n            des.setEnabled(false);\r\n\r\n\r\n            XAxis xAxis = barChart.getXAxis();\r\n            xAxis.setGranularity(1f);\r\n            xAxis.setGranularityEnabled(true);\r\n            barChart.getXAxis().setValueFormatter(new IndexAxisValueFormatter(xVals));\r\n            barChart.getXAxis().setPosition(XAxis.XAxisPosition.BOTTOM); // 텍스트 밑으로 내리기\r\n            barChart.getAxisLeft().setEnabled(false);\r\n            data.setValueTextSize(15);\r\n            xAxis.setTextSize(15);\r\n            data.setValueFormatter(new MyValueFormatter());   //  percent와 소수점 제거\r\n            set.setColors(ContextCompat.getColor(book_information.this, R.color.red), // Bar 색상 변경\r\n                    ContextCompat.getColor(book_information.this, R.color.yellow),\r\n                    ContextCompat.getColor(book_information.this, R.color.green));\r\n            barChart.setData(data);\r\n            barChart.animateY(5000);\r\n\r\n        }\r\n\r\n        @Override\r\n        protected Document doInBackground(String... zkzk) {\r\n\r\n            try {\r\n                URL url = new URL(zkzk[0]);\r\n                DocumentBuilderFactory factory =\r\n                        DocumentBuilderFactory.newInstance();\r\n                DocumentBuilder builder = factory.newDocumentBuilder(); //XML문서 빌더 객체를 생성\r\n                Document document = builder.parse(new InputSource(url.openStream())); //XML문서를 파싱한다.\r\n                document.getDocumentElement().normalize(); // 공백등 제거\r\n                NodeList nodeList = document.getElementsByTagName(\"loanGrp\");\r\n                int length = nodeList.getLength();\r\n\r\n                for (int i = 0; i < length; i++) {\r\n                    org.w3c.dom.Element data = (org.w3c.dom.Element) nodeList.item(i);\r\n                    NodeList ageList = data.getElementsByTagName(\"age\");\r\n                    Node text1 = (Node) ageList.item(0).getFirstChild();\r\n                    String strTemp = text1.getNodeValue();\r\n                    NodeList genderList = data.getElementsByTagName(\"gender\");\r\n                    String Str = genderList.item(0).getFirstChild().getNodeValue();\r\n                    NodeList loanCntList = data.getElementsByTagName(\"loanCnt\");\r\n                    String Str2 = loanCntList.item(0).getFirstChild().getNodeValue();\r\n\r\n                    Log.d(\"나이성별권수\", \"나이 :\" + strTemp + \"|\" + \"성별 :\" + Str + \"권수 :\" + \"|\" + Str2);\r\n                    int to = Integer.parseInt(Str2);\r\n                    to2[i] = to;\r\n                    St[i] = strTemp;\r\n                    Ge[i] = Str;\r\n                }\r\n                for (int i = 0; i < St.length; i++) {\r\n                    if (St[i].equals(\"청소년(14~19)\")) {\r\n                        St[i] = \"10대\";\r\n                    }\r\n                    if (St[i].equals(\"초등(8~13)\")) {\r\n                        St[i] = \"초등\";\r\n                    }\r\n                    if (Ge[i].equals(\"남성\")) {\r\n                        Ge[i] = \"(남)\";\r\n                    }\r\n                        if (Ge[i].equals(\"여성\")) {\r\n                            Ge[i] = \"(여)\";\r\n                        }\r\n                    }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                Log.e(\"home\", e.getMessage());\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    class Background extends AsyncTask<String, Integer, String> {\r\n        ProgressDialog asyncDialog = new ProgressDialog(book_information.this);\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            asyncDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n            asyncDialog.setMessage(\"책 데이터를 가져오는 중입니다. . \");\r\n            asyncDialog.show();\r\n            super.onPreExecute();\r\n        }\r\n\r\n        @Override\r\n        protected String doInBackground(String... isurl) {   // 장르 구분 파싱\r\n            try {\r\n\r\n                org.jsoup.nodes.Document doc = Jsoup.connect(isurl[0]).get();\r\n                Elements contents = doc.select(\"div#category\");\r\n                String text = contents.text();\r\n                String text3 = text.substring(text.indexOf(\"\") , text.indexOf(\"★ 이분야 새키핑알림 받기\"));\r\n                String text2 = text3.substring(text.indexOf(\"\") , text.indexOf(\">\"));\r\n                if (TextUtils.isEmpty(text2)) {\r\n                    asyncDialog.dismiss();\r\n                    return text2;\r\n                } else {\r\n                    asyncDialog.dismiss();\r\n                    return text3;\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    class MyBarDataSet extends BarDataSet {\r\n        public MyBarDataSet(List<BarEntry> yVals, String label) {\r\n            super(yVals, label);\r\n        }\r\n\r\n        @Override\r\n        public int getColor(int index) {\r\n            if(getEntryForIndex(index).getY() < 140)\r\n                return mColors.get(0);\r\n            else if(getEntryForIndex(index).getY() > 145)\r\n                return mColors.get(1);\r\n            else if(getEntryForIndex(index).getY() > 130)\r\n                return mColors.get(2);\r\n            else return mColors.get(3);\r\n        }\r\n\r\n    }\r\n\r\n    public class MyValueFormatter extends ValueFormatter {\r\n\r\n        private DecimalFormat mFormat;\r\n\r\n        public MyValueFormatter() {\r\n            mFormat = new DecimalFormat(\"#\");\r\n        }\r\n\r\n        @Override\r\n        public String getFormattedValue(float value) {\r\n            return mFormat.format(value) + \"%\";\r\n        }\r\n    }\r\n\r\n    public void MoreText(TextView textView, ImageView imageView) {\r\n        if (textView.getMaxLines() == 8) {\r\n            imageView.setImageResource(R.drawable.baseline_keyboard_arrow_up_black_18dp);\r\n            textView.setEllipsize(null);\r\n            textView.setMaxLines(1000);\r\n        } else {\r\n            imageView.setImageResource(R.drawable.baseline_keyboard_arrow_down_black_18dp);\r\n            textView.setEllipsize(TextUtils.TruncateAt.END);\r\n            textView.setMaxLines(8);\r\n        }\r\n\r\n    }\r\n\r\n    public String tagdel(Elements contents) {          // 공백을 살려야해서 이런식으로함\r\n        String text = contents.html().replace(\"<br>\", \"\\n\")\r\n                .replace(\"<span class=\\\"ellipsis\\\">...</span><span class=\\\"hide_desc\\\">\", \"\")\r\n                .replace(\"&nbsp;\", \"\")\r\n                .replace(\"</span>\", \"\")\r\n                .replace(\"&lt;/p&gt; &lt;p class=\\\"se-text-paragraph se-text-paragraph-align-left \\\" id=\\\"SE-439BBD9D-4A27-4933-A294-A30419FFC0C3\\\" style=\\\"line-height: 1.8;\\\"&gt; &lt;/p&gt; &lt;p class=\\\"se-text-paragraph se-text-paragraph-align-left \\\" id=\\\"SE-F459159B-AA1C-4E9C-A1BC-F6B1F49AF176\\\" style=\\\"line-height: 1.8;\\\"&gt;&lt;/p&gt;\", \"\")\r\n                .replace(\"&lt;/p&gt;\", \"\")\r\n                .replace(\"&lt;p&gt;\", \"\")\r\n                .replace(\"&lt;\",\"\")\r\n                .replace(\"&gt;\",\"\")\r\n                .replace(\"<b>\" ,\"\")\r\n                .replace(\"</b>\", \"\");\r\n        return text;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case android.R.id.home:{ //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n}\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/book_information.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/BookInformationActivity.java	(date 1618047143036)
@@ -18,6 +18,7 @@
 import android.widget.Toast;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.DB.BookDatabase;
 import com.github.mikephil.charting.charts.BarChart;
 import com.github.mikephil.charting.components.Description;
 import com.github.mikephil.charting.components.XAxis;
@@ -47,7 +48,7 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.core.content.ContextCompat;
 
-public class book_information extends AppCompatActivity implements View.OnClickListener {
+public class BookInformationActivity extends AppCompatActivity implements View.OnClickListener {
     TextView text_title;
     TextView text_sale_price;
     TextView text_datatime;
@@ -202,10 +203,10 @@
                 Cursor cu = db.rawQuery(sql, null);
                 if (cu.getCount() != 1) {
                     db.execSQL("insert into tb_book ( title, pirce, authors, publisher, category, thumbnail, isbn) values (?,?,?,?,?,?,?)", new String[]{ name, pr, authors, main_publisher, category, thumbnail, isbn});
-                    Toast toast = Toast.makeText(book_information.this, "등록 완료", Toast.LENGTH_SHORT);
+                    Toast toast = Toast.makeText(BookInformationActivity.this, "등록 완료", Toast.LENGTH_SHORT);
                     toast.show();
                 } else {
-                    Toast toast = Toast.makeText(book_information.this, "이미 등록된 책입니다", Toast.LENGTH_SHORT);
+                    Toast toast = Toast.makeText(BookInformationActivity.this, "이미 등록된 책입니다", Toast.LENGTH_SHORT);
                     toast.show();
                 }
                 db.close();
@@ -338,7 +339,6 @@
             }
             for (int z = 0; z < to2.length; z++) {
                 if (to2[z] != 0) {
-                    Log.d("나왔다", "왓어5");
                     double d = (double) to2[z] / (double) a * 100 ;   // Percent
                     xVals.add(St[z]+Ge[z]);
                     yVals1.add(new BarEntry(z, Math.round(d)));
@@ -359,9 +359,9 @@
             data.setValueTextSize(15);
             xAxis.setTextSize(15);
             data.setValueFormatter(new MyValueFormatter());   //  percent와 소수점 제거
-            set.setColors(ContextCompat.getColor(book_information.this, R.color.red), // Bar 색상 변경
-                    ContextCompat.getColor(book_information.this, R.color.yellow),
-                    ContextCompat.getColor(book_information.this, R.color.green));
+            set.setColors(ContextCompat.getColor(BookInformationActivity.this, R.color.red), // Bar 색상 변경
+                    ContextCompat.getColor(BookInformationActivity.this, R.color.yellow),
+                    ContextCompat.getColor(BookInformationActivity.this, R.color.green));
             barChart.setData(data);
             barChart.animateY(5000);
 
@@ -423,7 +423,7 @@
 
 
     class Background extends AsyncTask<String, Integer, String> {
-        ProgressDialog asyncDialog = new ProgressDialog(book_information.this);
+        ProgressDialog asyncDialog = new ProgressDialog(BookInformationActivity.this);
 
         @Override
         protected void onPreExecute() {
Index: app/src/main/java/com/example/choimyeongsik/BookBank/book_search.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\n\r\n\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.fasterxml.jackson.core.type.TypeReference;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.net.URLEncoder;\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class book_search extends AppCompatActivity {\r\n    RecyclerView mRecyclerView;\r\n    final String BOOK  = \"Book-search\";\r\n    LinearLayoutManager mLayoutManager;\r\n    BookAdapter bookAdapter;\r\n    ProgressDialog asyncDialog;\r\n    ArrayList<KAKAOBookVO> mitems = new ArrayList <>();\r\n     String isbn;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_book_search);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        Intent intent = getIntent();\r\n         String title = intent.getExtras().getString(\"title\");\r\n        Log.d(BOOK, title);\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_too);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        mRecyclerView = findViewById(R.id.kakabookView);\r\n        mRecyclerView.setHasFixedSize(true);\r\n        mLayoutManager = new LinearLayoutManager(this);\r\n        mRecyclerView.setLayoutManager(mLayoutManager);\r\n        RecyclerDecoration spaceDecoration = new RecyclerDecoration(50);\r\n        mRecyclerView.addItemDecoration(spaceDecoration);\r\n        mRecyclerView.addItemDecoration(new DividerItemDecoration(getApplicationContext(), DividerItemDecoration.VERTICAL));\r\n\r\n      BookTask  bookTask = new BookTask(this); // 카카오 책검색 api\r\n     bookTask.execute(title);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        mRecyclerView.addOnItemTouchListener(new RecyclerTouchListener(getApplicationContext(), mRecyclerView, new ClickListener() {\r\n            @Override\r\n            public void onClick(View view, int postion) {\r\n                startinformation(postion,getApplication());\r\n            }\r\n\r\n            @Override\r\n            public void onLongClick(View view, int postion) {\r\n\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    class BookTask extends AsyncTask<String, Integer, String> {\r\n        private Context context;\r\n\r\n\r\n        public BookTask(Context context) {\r\n            this.context = context;\r\n        }\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            Intent intent = getIntent();\r\n            if (intent !=  null) {\r\n                asyncDialog = new ProgressDialog(book_search.this);\r\n                asyncDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n                asyncDialog.setMessage(\"책 검색중입니다. . \");\r\n                asyncDialog.show();\r\n            } else\r\n            {\r\n                asyncDialog = new ProgressDialog(context);\r\n                asyncDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n                asyncDialog.setMessage(\"책 검색중입니다. . \");\r\n                asyncDialog.show();\r\n            }\r\n            super.onPreExecute();\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {       // FragmentHome에서 클릭했을경우와 책검색후에 클릭했을경우를 나눔\r\n            Intent intent = getIntent();\r\n            if (intent != null) {\r\n                String HOME = intent.getExtras().getString(\"HOME\");\r\n                if (HOME.equals(\"HOME\")) {\r\n                    bookAdapter = new BookAdapter(mitems);\r\n                    mRecyclerView.setAdapter(bookAdapter);\r\n                    bookAdapter.notifyDataSetChanged();\r\n                }\r\n            } else {\r\n                startinformation(0, context);\r\n            }\r\n\r\n\r\n          asyncDialog.dismiss();\r\n\r\n\r\n        }\r\n\r\n        @Override\r\n        protected String doInBackground(String... parms) {\r\n            String json;\r\n            BufferedReader br;\r\n            URL url;\r\n            try {\r\n                String address = \"https://dapi.kakao.com/v3/search/book?target=title&query=\"+ URLEncoder.encode(parms[0],\"UTF-8\")+ (\"&size=30\");\r\n                url = new URL(address);\r\n                HttpURLConnection conn = (HttpURLConnection)url.openConnection();\r\n                conn.setConnectTimeout(30000);\r\n                conn.setRequestProperty(\"Authorization\",\"KakaoAK 3e82e4d9bea33046d8289b5e3eb53add\");\r\n                br = new BufferedReader( new InputStreamReader(conn.getInputStream()));\r\n                if ( br == null) {\r\n                    Toast.makeText(getApplication(), \"데이터 다운로드 실패\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                StringBuilder sb = new StringBuilder();\r\n                String line = null;\r\n                while((line = br.readLine()) != null) {\r\n                    sb.append(line);\r\n                }\r\n                br.close();\r\n                ObjectMapper mapper = new ObjectMapper();\r\n                Map<String,Object> map = mapper.readValue(sb.toString(),\r\n                        new TypeReference<Map<String,Object>>() {\r\n                        });\r\n                Object obj = map.get(\"documents\");\r\n                String resultJsonData = mapper.writeValueAsString(obj);\r\n                mitems = mapper.readValue(resultJsonData,\r\n                        new TypeReference<ArrayList<KAKAOBookVO>>() {});\r\n                /* for(KAKAOBookVO book : mitems){\r\n                    Log.i(\"KAKAOBOOKLog\", String.valueOf(book.getAuthors()));\r\n               } */\r\n            } catch (Exception e) {\r\n            }\r\n\r\n            return parms[0];\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case android.R.id.home:{ //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    public interface ClickListener {\r\n        void onClick(View view, int postion);\r\n        void onLongClick(View view, int postion);\r\n    }\r\n\r\n    public static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {\r\n        private GestureDetector gestureDetector;\r\n        private book_search.ClickListener clickListener;\r\n\r\n        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final book_search.ClickListener clickListener) {\r\n            this.clickListener = clickListener;\r\n            gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n                @Override\r\n                public boolean onSingleTapUp(MotionEvent e) {\r\n                    return true;\r\n                }\r\n\r\n                @Override\r\n                public void onLongPress(MotionEvent e) {\r\n                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                    if (child != null && clickListener != null) {\r\n                        clickListener.onLongClick(child, recyclerView.getChildAdapterPosition(child));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {\r\n            View child = rv.findChildViewUnder(e.getX(), e.getY());\r\n            if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {\r\n                clickListener.onClick(child, rv.getChildAdapterPosition(child));\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(RecyclerView rv, MotionEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public void startinformation(int postion, Context context) {  // book_infomation에 데이터 전달\r\n    Intent intent = new Intent(context, book_information.class);\r\n    ArrayList<String> authors = mitems.get(postion).getAuthors();\r\n    String str = authors.set(0, authors.get(0)); // [] 빼기\r\n    String title_  = mitems.get(postion).getTitle();\r\n    String sale_price_= mitems.get(postion).getSale_price();\r\n    String datatime_ = mitems.get(postion).getDatetime();\r\n    String thumbnail_ = mitems.get(postion).getThumbnail();\r\n    String authors_  = String.valueOf(authors);\r\n    String main_publisher_ = mitems.get(postion).getPublisher();\r\n    String isbncut = mitems.get(postion).getIsbn();\r\n    String bookurl = mitems.get(postion).getUrl();\r\n\r\n\r\n    String zsd = Integer.toString(isbncut.length()); // isbn 길이 확인\r\n    int asdz = Integer.parseInt(zsd);\r\n\r\n\r\n    if (asdz > 14) {\r\n        isbn = isbncut.substring(11); // Isbn 13자리\r\n    } else {\r\n        isbn = null;\r\n    }\r\n\r\n    intent.putExtra(\"title\", title_);\r\n    intent.putExtra(\"sale_price\", sale_price_);\r\n    intent.putExtra(\"datatime\", datatime_);\r\n    intent.putExtra(\"thumbnail\", thumbnail_);\r\n    intent.putExtra(\"authors\", str);\r\n    intent.putExtra(\"main_publisher\", main_publisher_);\r\n    intent.putExtra(\"isbn\", isbn);\r\n    intent.putExtra(\"url\", bookurl);\r\n   intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n\r\n\r\n        context.startActivity(intent);\r\n\r\n}\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/book_search.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/BookSerachActivity.java	(date 1618047142978)
@@ -16,6 +16,12 @@
 import android.widget.Toast;
 
 
+import com.example.choimyeongsik.BookBank.adapter.BookAdapter;
+import com.example.choimyeongsik.BookBank.callback.KakaoRetrofit;
+import com.example.choimyeongsik.BookBank.decoration.RecyclerDecoration;
+import com.example.choimyeongsik.BookBank.model.Document;
+import com.example.choimyeongsik.BookBank.model.DocumentList;
+import com.example.choimyeongsik.BookBank.model.KAKAOBookVO;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
 
@@ -32,14 +38,20 @@
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
 
-public class book_search extends AppCompatActivity {
+public class BookSerachActivity extends AppCompatActivity {
     RecyclerView mRecyclerView;
     final String BOOK  = "Book-search";
     LinearLayoutManager mLayoutManager;
     BookAdapter bookAdapter;
     ProgressDialog asyncDialog;
     ArrayList<KAKAOBookVO> mitems = new ArrayList <>();
+    ArrayList<Document> Tr;
      String isbn;
 
 
@@ -73,17 +85,48 @@
 
 
 
-        mRecyclerView.addOnItemTouchListener(new RecyclerTouchListener(getApplicationContext(), mRecyclerView, new ClickListener() {
-            @Override
-            public void onClick(View view, int postion) {
-                startinformation(postion,getApplication());
-            }
+
+
+
+         Retrofit retrofit = new Retrofit.Builder()
+                 .baseUrl("https://dapi.kakao.com")
+                .addConverterFactory(GsonConverterFactory.create())
+                .build();
+
+        KakaoRetrofit retable = retrofit.create(KakaoRetrofit.class);
+        Call <DocumentList> call = retable.getDocument("안녕");
+
+
+
+        call.enqueue(new Callback <DocumentList>() {
+                         @Override
+                         public void onResponse(Call <DocumentList> call, Response <DocumentList> response) {
+                                    Log.v("안녕2", response.toString());
+                           Tr = response.body().documents;
+                           Log.d("안녕2", String.valueOf(response.body().documents.size()));
+                           Log.d("안녕2", Tr.get(1).getTitle());
+
+
+                         }
+
+                         @Override
+                         public void onFailure(Call <DocumentList> call, Throwable t) {
+                                        Log.d("안녕2", "실패");
+                         }
+                     });
+
+
+                mRecyclerView.addOnItemTouchListener(new RecyclerTouchListener(getApplicationContext(), mRecyclerView, new ClickListener() {
+                    @Override
+                    public void onClick(View view, int postion) {
+                        startinformation(postion, getApplication());
+                    }
 
-            @Override
-            public void onLongClick(View view, int postion) {
+                    @Override
+                    public void onLongClick(View view, int postion) {
 
-            }
-        }));
+                    }
+                }));
 
     }
 
@@ -99,7 +142,7 @@
         protected void onPreExecute() {
             Intent intent = getIntent();
             if (intent !=  null) {
-                asyncDialog = new ProgressDialog(book_search.this);
+                asyncDialog = new ProgressDialog(BookSerachActivity.this);
                 asyncDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
                 asyncDialog.setMessage("책 검색중입니다. . ");
                 asyncDialog.show();
@@ -190,9 +233,9 @@
 
     public static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {
         private GestureDetector gestureDetector;
-        private book_search.ClickListener clickListener;
+        private BookSerachActivity.ClickListener clickListener;
 
-        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final book_search.ClickListener clickListener) {
+        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final BookSerachActivity.ClickListener clickListener) {
             this.clickListener = clickListener;
             gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {
                 @Override
@@ -231,7 +274,7 @@
 
 
     public void startinformation(int postion, Context context) {  // book_infomation에 데이터 전달
-    Intent intent = new Intent(context, book_information.class);
+    Intent intent = new Intent(context, BookInformationActivity.class);
     ArrayList<String> authors = mitems.get(postion).getAuthors();
     String str = authors.set(0, authors.get(0)); // [] 빼기
     String title_  = mitems.get(postion).getTitle();
Index: app/src/main/java/com/example/choimyeongsik/BookBank/Setting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.content.ComponentName;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentSender;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.os.ParcelFileDescriptor;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.drive.CreateFileActivityOptions;\r\nimport com.google.android.gms.drive.Drive;\r\nimport com.google.android.gms.drive.DriveClient;\r\nimport com.google.android.gms.drive.DriveContents;\r\nimport com.google.android.gms.drive.DriveFile;\r\nimport com.google.android.gms.drive.DriveId;\r\nimport com.google.android.gms.drive.DriveResourceClient;\r\nimport com.google.android.gms.drive.MetadataChangeSet;\r\nimport com.google.android.gms.drive.OpenFileActivityOptions;\r\nimport com.google.android.gms.drive.query.Filters;\r\nimport com.google.android.gms.drive.query.SearchableField;\r\nimport com.google.android.gms.tasks.Continuation;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.gms.tasks.TaskCompletionSource;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\n\r\npublic class Setting extends AppCompatActivity {\r\n    public static final int REQUEST_CODE_SIGN_IN = 0;\r\n    public static final int REQUEST_CODE_OPENING = 1;\r\n    public static final int REQUEST_CODE_CREATION = 2;\r\n    private static final String TAG = \"안녕\";\r\n    public boolean isBackup = true;\r\n    private static final String TAG1 = \"Google Drive Activity\";\r\n    public DriveClient mDriveClient;\r\n    public DriveResourceClient mDriveResourceClient;\r\n    public TaskCompletionSource <DriveId> mOpenItemTaskSource;\r\n   private Button driveBackup;\r\n   private Button driveLoad;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_setting);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        driveBackup = (Button)findViewById(R.id.drive_backup);\r\n        driveLoad = (Button)findViewById(R.id.drive_load);\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_setting);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setTitle(\"\");\r\n\r\n\r\n        driveBackup.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                isBackup = true;\r\n                connectToDrive(isBackup);\r\n            }\r\n        });\r\n        driveLoad.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                isBackup = false;\r\n                connectToDrive(isBackup);\r\n            }\r\n        });\r\n\r\n    }\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home: { //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        switch (requestCode) {\r\n            case REQUEST_CODE_SIGN_IN:\r\n                if (resultCode == RESULT_OK) {\r\n                    connectToDrive(isBackup);\r\n                }\r\n                break;\r\n            case REQUEST_CODE_CREATION:\r\n                // Called after a file is saved to Drive.\r\n                if (resultCode == RESULT_OK) {\r\n                    Log.i(TAG, \"Backup successfully saved.\");\r\n                    Toast.makeText(this, \"Backup successufly loaded!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                break;\r\n\r\n            case REQUEST_CODE_OPENING:\r\n                if (resultCode == RESULT_OK) {\r\n                    DriveId driveId = data.getParcelableExtra(\r\n                            OpenFileActivityOptions.EXTRA_RESPONSE_DRIVE_ID);\r\n                    mOpenItemTaskSource.setResult(driveId);\r\n                } else {\r\n\r\n                    mOpenItemTaskSource.setException(new RuntimeException(\"Unable to open file\"));\r\n                }\r\n\r\n        }\r\n    }\r\n    public void connectToDrive(boolean backup) {\r\n        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);\r\n        if (account == null) {\r\n            signIn();\r\n        } else {\r\n            //Initialize the drive api\r\n            mDriveClient = Drive.getDriveClient(this, account);\r\n            // Build a drive resource client.\r\n            mDriveResourceClient = Drive.getDriveResourceClient(this, account);\r\n            if (backup)\r\n                startDriveBackup();\r\n            else\r\n                startDriveRestore();\r\n        }\r\n    }\r\n\r\n    private void signIn() {\r\n        Log.i(TAG, \"Start sign in\");\r\n        GoogleSignInClient GoogleSignInClient = buildGoogleSignInClient();\r\n        this.startActivityForResult(GoogleSignInClient.getSignInIntent(), REQUEST_CODE_SIGN_IN);\r\n    }\r\n\r\n    private GoogleSignInClient buildGoogleSignInClient() {\r\n        GoogleSignInOptions signInOptions =\r\n                new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                        .requestScopes(Drive.SCOPE_FILE)\r\n                        .build();\r\n        return GoogleSignIn.getClient(this, signInOptions);\r\n    }\r\n\r\n\r\n    private void startDriveBackup() {\r\n        mDriveResourceClient.createContents()\r\n                .continueWithTask(\r\n                        task -> createFileIntentSender(task.getResult()))\r\n                .addOnFailureListener(\r\n                        e -> Log.w(TAG, \"Failed to create new contents.\", e));\r\n    }\r\n\r\n    private Task <Void> createFileIntentSender(DriveContents driveContents) {\r\n\r\n        final String inFileName = this.getDatabasePath(BookDatabase.tableName).toString();\r\n\r\n        try {\r\n            File dbFile = new File(inFileName);\r\n            FileInputStream fis = new FileInputStream(dbFile);\r\n            OutputStream outputStream = driveContents.getOutputStream();\r\n\r\n            // Transfer bytes from the inputfile to the outputfile\r\n            byte[] buffer = new byte[1024];\r\n            int length;\r\n            while ((length = fis.read(buffer)) > 0) {\r\n                outputStream.write(buffer, 0, length);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        MetadataChangeSet metadataChangeSet = new MetadataChangeSet.Builder()\r\n                .setTitle(\"container2.db\")\r\n                .setMimeType(\"application/db\")\r\n                .build();\r\n\r\n\r\n        CreateFileActivityOptions createFileActivityOptions =\r\n                new CreateFileActivityOptions.Builder()\r\n                        .setInitialMetadata(metadataChangeSet)\r\n                        .setInitialDriveContents(driveContents)\r\n                        .build();\r\n\r\n        return mDriveClient\r\n                .newCreateFileActivityIntentSender(createFileActivityOptions)\r\n                .continueWith(\r\n                        task -> {\r\n                            this.startIntentSenderForResult(task.getResult(), REQUEST_CODE_CREATION, null, 0, 0, 0);\r\n                            return null;\r\n                        });\r\n    }\r\n\r\n\r\n    private void startDriveRestore() {\r\n        pickFile()\r\n                .addOnSuccessListener(this,\r\n                        driveId -> retrieveContents(driveId.asDriveFile()))\r\n\r\n                .addOnFailureListener(this, e -> {\r\n                    Log.e(TAG, \"No file selected\", e);\r\n                });\r\n    }\r\n\r\n    private void retrieveContents(DriveFile file) {\r\n        Log.d(TAG, \"안왔어\");\r\n\r\n        //DB Path\r\n        final String inFileName = this.getDatabasePath(BookDatabase.tableName).toString();\r\n\r\n        Task <DriveContents> openFileTask = mDriveResourceClient.openFile(file, DriveFile.MODE_READ_ONLY);\r\n\r\n        openFileTask\r\n                .continueWithTask(task -> {\r\n                    DriveContents contents = task.getResult();\r\n                    try {\r\n                        ParcelFileDescriptor parcelFileDescriptor = contents.getParcelFileDescriptor();\r\n                        FileInputStream fileInputStream = new FileInputStream(parcelFileDescriptor.getFileDescriptor());\r\n\r\n                        // Open the empty db as the output stream\r\n                        OutputStream output = new FileOutputStream(inFileName);\r\n\r\n                        // Transfer bytes from the inputfile to the outputfile\r\n                        byte[] buffer = new byte[1024];\r\n                        int length;\r\n                        while ((length = fileInputStream.read(buffer)) > 0) {\r\n                            output.write(buffer, 0, length);\r\n                        }\r\n\r\n                        // Close the streams\r\n                        output.flush();\r\n                        output.close();\r\n                        fileInputStream.close();\r\n                        Toast.makeText(this, \"복원 완료\", Toast.LENGTH_LONG).show();\r\n                        restarApp(getApplicationContext());\r\n\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                        Toast.makeText(this, \"복원 실패\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    return mDriveResourceClient.discardContents(contents);\r\n\r\n                })\r\n                .addOnFailureListener(e -> {\r\n                    Log.e(TAG, \"Unable to read contents\", e);\r\n                    Toast.makeText(this, \"Error on import\", Toast.LENGTH_SHORT).show();\r\n                });\r\n    }\r\n\r\n    private Task <DriveId> pickItem(OpenFileActivityOptions openOptions) {\r\n        mOpenItemTaskSource = new TaskCompletionSource <>();\r\n        mDriveClient\r\n                .newOpenFileActivityIntentSender(openOptions)\r\n                .continueWith((Continuation <IntentSender, Void>) task -> {\r\n                    this.startIntentSenderForResult(\r\n                            task.getResult(), REQUEST_CODE_OPENING, null, 0, 0, 0);\r\n                    return null;\r\n                });\r\n        Log.d(TAG, \"ㅎㅇ\" + mOpenItemTaskSource.getTask());\r\n        return mOpenItemTaskSource.getTask();\r\n    }\r\n\r\n    private Task <DriveId> pickFile() {\r\n        OpenFileActivityOptions openOptions =\r\n                new OpenFileActivityOptions.Builder()\r\n                        .setSelectionFilter(Filters.eq(SearchableField.MIME_TYPE, \"application/db\"))\r\n                        .setActivityTitle(\"Select DB File\")\r\n                        .build();\r\n\r\n        return pickItem(openOptions);\r\n\r\n\r\n\r\n    }\r\n\r\n    public static void restarApp(Context context) {\r\n        PackageManager packageManager = context.getPackageManager();\r\n        Intent intent = packageManager.getLaunchIntentForPackage(context.getPackageName());\r\n        ComponentName componentName = intent.getComponent();\r\n        Intent mainIntent = Intent.makeRestartActivityTask(componentName);\r\n        context.startActivity(mainIntent);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/Setting.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/SettingActivity.java	(date 1618047143008)
@@ -18,6 +18,7 @@
 import android.widget.Button;
 import android.widget.Toast;
 
+import com.example.choimyeongsik.BookBank.DB.BookDatabase;
 import com.google.android.gms.auth.api.signin.GoogleSignIn;
 import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
 import com.google.android.gms.auth.api.signin.GoogleSignInClient;
@@ -43,7 +44,7 @@
 import java.io.IOException;
 import java.io.OutputStream;
 
-public class Setting extends AppCompatActivity {
+public class SettingActivity extends AppCompatActivity {
     public static final int REQUEST_CODE_SIGN_IN = 0;
     public static final int REQUEST_CODE_OPENING = 1;
     public static final int REQUEST_CODE_CREATION = 2;
@@ -53,16 +54,16 @@
     public DriveClient mDriveClient;
     public DriveResourceClient mDriveResourceClient;
     public TaskCompletionSource <DriveId> mOpenItemTaskSource;
-   private Button driveBackup;
-   private Button driveLoad;
+    private Button driveBackup;
+    private Button driveLoad;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_setting);
         getWindow().setStatusBarColor(Color.parseColor("#D8D8D8"));
-        driveBackup = (Button)findViewById(R.id.drive_backup);
-        driveLoad = (Button)findViewById(R.id.drive_load);
+        driveBackup = (Button) findViewById(R.id.drive_backup);
+        driveLoad = (Button) findViewById(R.id.drive_load);
         Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_setting);
         setSupportActionBar(mToolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
@@ -85,6 +86,7 @@
         });
 
     }
+
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
@@ -95,6 +97,7 @@
         }
         return super.onOptionsItemSelected(item);
     }
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -125,6 +128,7 @@
 
         }
     }
+
     public void connectToDrive(boolean backup) {
         GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);
         if (account == null) {
@@ -283,7 +287,6 @@
         return pickItem(openOptions);
 
 
-
     }
 
     public static void restarApp(Context context) {
@@ -293,9 +296,5 @@
         Intent mainIntent = Intent.makeRestartActivityTask(componentName);
         context.startActivity(mainIntent);
     }
-}
-
-
-
 
-
+}
Index: app/src/main/java/com/example/choimyeongsik/BookBank/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.Manifest;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\n\r\nimport com.google.android.gms.ads.AdListener;\r\nimport com.google.android.gms.ads.AdRequest;\r\nimport com.google.android.gms.ads.AdView;\r\nimport com.google.android.gms.ads.MobileAds;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\nimport static com.kakao.util.helper.Utility.getPackageInfo;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private static final String TAG = \"123\";\r\n    private FragmentManager fragmentManager = getSupportFragmentManager();\r\n    private FragmentHome fragmentHome = new FragmentHome();\r\n    private FragmentRecord fragmentRecord = new FragmentRecord();\r\n    private FragmentGallery fragmentGallery = new FragmentGallery();\r\n    private Fragmentlibrary fragmentlibrary = new Fragmentlibrary();\r\n    private Fragment fa,fb,fc,fd;\r\n    private final long FINISH_INTERVAL_TIME = 2000;\r\n    private long backPressedTime = 0;\r\n    private AdView mAdView;\r\n    private BannerDialog bannerDialog;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    Context mContext;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED && checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                Log.d(\"ㅎㅇ\", \"권한 설정 완료\");\r\n            } else {\r\n                Log.d(\"ㅎㅇ\", \"권한 설정 요청\");\r\n                ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);\r\n            }\r\n        }\r\n        fa = new FragmentHome();\r\n        fragmentManager.beginTransaction().replace(R.id.frameLayout, fa).commit();\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener((BottomNavigationView.OnNavigationItemSelectedListener) new ItemSelectedListener());\r\n        BottomNavigationHelper.disableShiftMode(bottomNavigationView);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        View.OnClickListener bannerListener = new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                mAdView.setAdListener(new AdListener() {\r\n                    @Override\r\n                    public void onAdLoaded() {\r\n                        // Code to be executed when an ad finishes loading.\r\n                        // 광고가 문제 없이 로드시 출력됩니다.\r\n                        Log.d(\"@@@\", \"onAdLoaded\");\r\n                    }\r\n                    @Override\r\n                    public void onAdFailedToLoad(int errorCode) {\r\n                        // Code to be executed when an ad request fails.\r\n                        // 광고 로드에 문제가 있을시 출력됩니다.\r\n                        Log.d(\"@@@\", \"onAdFailedToLoad \" + errorCode);\r\n                    }\r\n                    @Override\r\n                    public void onAdOpened() {\r\n                        // Code to be executed when an ad opens an overlay that\r\n                        // covers the screen.\r\n                    }\r\n                    @Override\r\n                    public void onAdClicked() {\r\n                        // Code to be executed when the user clicks on an ad.\r\n                    }\r\n                    @Override\r\n                    public void onAdLeftApplication() {\r\n                        // Code to be executed when the user has left the app.\r\n                    }\r\n                    @Override\r\n                    public void onAdClosed() {\r\n\r\n                        // Code to be executed when the user is about to return\r\n\r\n                        // to the app after tapping on an ad.\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n        };\r\n        View.OnClickListener positiveListener = new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bannerDialog.dismiss();\r\n                finish();\r\n            }\r\n        };\r\n        View.OnClickListener negativeListener = new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bannerDialog.dismiss();\r\n            }\r\n        };\r\n        bannerDialog = new BannerDialog(this,  positiveListener,negativeListener,bannerListener);\r\n        bannerDialog.setCancelable(false);\r\n        bannerDialog.setCanceledOnTouchOutside(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    class ItemSelectedListener implements BottomNavigationView.OnNavigationItemSelectedListener {\r\n\r\n        @Override\r\n        public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n            FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n\r\n            switch (menuItem.getItemId()) {\r\n                case R.id.navigaticon_menu:\r\n                    if(fa == null) {\r\n                        fa = new FragmentHome();\r\n                        fragmentManager.beginTransaction().add(R.id.frameLayout, fa).commit();\r\n\r\n                    }\r\n                    if(fa != null)  fragmentManager.beginTransaction().show(fa).commit();\r\n                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();\r\n                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();\r\n                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();\r\n                    fd = null;\r\n                    break;\r\n\r\n\r\n                case R.id.navigaticon_menu2:\r\n                    if (fb ==null) {\r\n                        fb = new FragmentRecord();\r\n                        fragmentManager.beginTransaction().add(R.id.frameLayout, fb).commit();\r\n\r\n                    }\r\n                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();\r\n                    if(fb != null)   fragmentManager.beginTransaction().show(fb).commit();\r\n                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();\r\n                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();\r\n                    fd = null;\r\n                    break;\r\n\r\n\r\n                case R.id.navigaticon_menu3:\r\n                    if (fc == null) {\r\n                        fc = new FragmentGallery();\r\n                        fragmentManager.beginTransaction().add(R.id.frameLayout, fc).commit();\r\n                    }\r\n                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();\r\n                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();\r\n                    if(fc != null) fragmentManager.beginTransaction().show(fc).commit();\r\n                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();\r\n                    fd = null;\r\n                    break;\r\n\r\n                case R.id.navigaticon_menu4:\r\n                    if (fd == null) {\r\n                        fd = new Fragmentlibrary();\r\n                        fragmentManager.beginTransaction().add(R.id.frameLayout,fd).commit();\r\n                    }\r\n                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();\r\n                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();\r\n                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();\r\n                    if(fd != null) fragmentManager.beginTransaction().show(fd).commit();\r\n\r\n                    break;\r\n\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n\r\n    public void onBackPressed() {\r\n        bannerDialog.show();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public class BannerDialog extends Dialog {\r\n\r\n        private Button mPositiveButton;\r\n        private Button mNegativeButton;\r\n        private AdView mAdView;\r\n\r\n        private View.OnClickListener mPositiveListener;\r\n        private View.OnClickListener mNegativeListener;\r\n        private View.OnClickListener mBannerListener;\r\n\r\n        @Override\r\n        protected void onCreate(Bundle savedInstanceState) {\r\n            super.onCreate(savedInstanceState);\r\n\r\n\r\n\r\n            //다이얼로그 밖의 화면은 흐리게 만들어줌\r\n            WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();\r\n            layoutParams.flags = WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n            layoutParams.dimAmount = 0.8f;\r\n            getWindow().setAttributes(layoutParams);\r\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,\r\n                    WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL);\r\n            getWindow().setBackgroundDrawableResource(android.R.color.transparent);\r\n\r\n            setContentView(R.layout.bannerdialog);\r\n\r\n            //셋팅\r\n            mPositiveButton=(Button)findViewById(R.id.btn_ok);\r\n            mNegativeButton=(Button)findViewById(R.id.btn_no);\r\n            mAdView = findViewById(R.id.adView);\r\n            MobileAds.initialize(getApplicationContext(),getString(R.string.admob_app_id));\r\n            mAdView = findViewById(R.id.adView);\r\n            AdRequest adRequest = new AdRequest.Builder().build();\r\n            mAdView.loadAd(adRequest);\r\n\r\n            //클릭 리스너 셋팅 (클릭버튼이 동작하도록 만들어줌.)\r\n            mPositiveButton.setOnClickListener(mPositiveListener);\r\n            mNegativeButton.setOnClickListener(mNegativeListener);\r\n            mAdView.setOnClickListener(mBannerListener);\r\n        }\r\n\r\n        //생성자 생성\r\n        public BannerDialog(@NonNull Context context,\r\n                            View.OnClickListener positiveListener,\r\n                            View.OnClickListener negativeListener,\r\n                            View.OnClickListener bannerListener\r\n\r\n        ) {\r\n            super(context);\r\n            this.mPositiveListener = positiveListener;\r\n            this.mNegativeListener = negativeListener;\r\n            this.mBannerListener = bannerListener;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/MainActivity.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/MainActivity.java	(date 1618047142984)
@@ -14,6 +14,10 @@
 import android.view.WindowManager;
 import android.widget.Button;
 
+import com.example.choimyeongsik.BookBank.Fragment.FragmentGallery;
+import com.example.choimyeongsik.BookBank.Fragment.FragmentRecord;
+import com.example.choimyeongsik.BookBank.Fragment.Fragmentlibrary;
+import com.example.choimyeongsik.BookBank.Utils.BottomNavigationHelper;
 import com.google.android.gms.ads.AdListener;
 import com.google.android.gms.ads.AdRequest;
 import com.google.android.gms.ads.AdView;
@@ -36,20 +40,15 @@
     private FragmentRecord fragmentRecord = new FragmentRecord();
     private FragmentGallery fragmentGallery = new FragmentGallery();
     private Fragmentlibrary fragmentlibrary = new Fragmentlibrary();
-    private Fragment fa,fb,fc,fd;
+    private Fragment fa, fb, fc, fd;
     private final long FINISH_INTERVAL_TIME = 2000;
     private long backPressedTime = 0;
     private AdView mAdView;
     private BannerDialog bannerDialog;
 
 
-
-
-
-
-
-
     Context mContext;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -57,9 +56,7 @@
         getWindow().setStatusBarColor(Color.parseColor("#D8D8D8"));
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             if (checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED && checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {
-                Log.d("ㅎㅇ", "권한 설정 완료");
             } else {
-                Log.d("ㅎㅇ", "권한 설정 요청");
                 ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
             }
         }
@@ -71,10 +68,6 @@
         BottomNavigationHelper.disableShiftMode(bottomNavigationView);
 
 
-
-
-
-
         View.OnClickListener bannerListener = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -85,25 +78,30 @@
                         // 광고가 문제 없이 로드시 출력됩니다.
                         Log.d("@@@", "onAdLoaded");
                     }
+
                     @Override
                     public void onAdFailedToLoad(int errorCode) {
                         // Code to be executed when an ad request fails.
                         // 광고 로드에 문제가 있을시 출력됩니다.
                         Log.d("@@@", "onAdFailedToLoad " + errorCode);
                     }
+
                     @Override
                     public void onAdOpened() {
                         // Code to be executed when an ad opens an overlay that
                         // covers the screen.
                     }
+
                     @Override
                     public void onAdClicked() {
                         // Code to be executed when the user clicks on an ad.
                     }
+
                     @Override
                     public void onAdLeftApplication() {
                         // Code to be executed when the user has left the app.
                     }
+
                     @Override
                     public void onAdClosed() {
 
@@ -130,17 +128,12 @@
                 bannerDialog.dismiss();
             }
         };
-        bannerDialog = new BannerDialog(this,  positiveListener,negativeListener,bannerListener);
+        bannerDialog = new BannerDialog(this, positiveListener, negativeListener, bannerListener);
         bannerDialog.setCancelable(false);
         bannerDialog.setCanceledOnTouchOutside(false);
 
 
-
-
-
-
     }
-
 
 
     class ItemSelectedListener implements BottomNavigationView.OnNavigationItemSelectedListener {
@@ -151,29 +144,29 @@
 
             switch (menuItem.getItemId()) {
                 case R.id.navigaticon_menu:
-                    if(fa == null) {
+                    if (fa == null) {
                         fa = new FragmentHome();
                         fragmentManager.beginTransaction().add(R.id.frameLayout, fa).commit();
 
                     }
-                    if(fa != null)  fragmentManager.beginTransaction().show(fa).commit();
-                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();
-                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();
-                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();
+                    if (fa != null) fragmentManager.beginTransaction().show(fa).commit();
+                    if (fb != null) fragmentManager.beginTransaction().hide(fb).commit();
+                    if (fc != null) fragmentManager.beginTransaction().hide(fc).commit();
+                    if (fd != null) fragmentManager.beginTransaction().hide(fd).commit();
                     fd = null;
                     break;
 
 
                 case R.id.navigaticon_menu2:
-                    if (fb ==null) {
+                    if (fb == null) {
                         fb = new FragmentRecord();
                         fragmentManager.beginTransaction().add(R.id.frameLayout, fb).commit();
 
                     }
-                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();
-                    if(fb != null)   fragmentManager.beginTransaction().show(fb).commit();
-                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();
-                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();
+                    if (fa != null) fragmentManager.beginTransaction().hide(fa).commit();
+                    if (fb != null) fragmentManager.beginTransaction().show(fb).commit();
+                    if (fc != null) fragmentManager.beginTransaction().hide(fc).commit();
+                    if (fd != null) fragmentManager.beginTransaction().hide(fd).commit();
                     fd = null;
                     break;
 
@@ -183,22 +176,22 @@
                         fc = new FragmentGallery();
                         fragmentManager.beginTransaction().add(R.id.frameLayout, fc).commit();
                     }
-                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();
-                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();
-                    if(fc != null) fragmentManager.beginTransaction().show(fc).commit();
-                    if(fd != null) fragmentManager.beginTransaction().hide(fd).commit();
+                    if (fa != null) fragmentManager.beginTransaction().hide(fa).commit();
+                    if (fb != null) fragmentManager.beginTransaction().hide(fb).commit();
+                    if (fc != null) fragmentManager.beginTransaction().show(fc).commit();
+                    if (fd != null) fragmentManager.beginTransaction().hide(fd).commit();
                     fd = null;
                     break;
 
                 case R.id.navigaticon_menu4:
                     if (fd == null) {
                         fd = new Fragmentlibrary();
-                        fragmentManager.beginTransaction().add(R.id.frameLayout,fd).commit();
+                        fragmentManager.beginTransaction().add(R.id.frameLayout, fd).commit();
                     }
-                    if(fa != null)   fragmentManager.beginTransaction().hide(fa).commit();
-                    if(fb != null)   fragmentManager.beginTransaction().hide(fb).commit();
-                    if(fc != null) fragmentManager.beginTransaction().hide(fc).commit();
-                    if(fd != null) fragmentManager.beginTransaction().show(fd).commit();
+                    if (fa != null) fragmentManager.beginTransaction().hide(fa).commit();
+                    if (fb != null) fragmentManager.beginTransaction().hide(fb).commit();
+                    if (fc != null) fragmentManager.beginTransaction().hide(fc).commit();
+                    if (fd != null) fragmentManager.beginTransaction().show(fd).commit();
 
                     break;
 
@@ -208,7 +201,6 @@
     }
 
 
-
     @Override
 
     public void onBackPressed() {
@@ -216,9 +208,6 @@
     }
 
 
-
-
-
     public class BannerDialog extends Dialog {
 
         private Button mPositiveButton;
@@ -234,7 +223,6 @@
             super.onCreate(savedInstanceState);
 
 
-
             //다이얼로그 밖의 화면은 흐리게 만들어줌
             WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();
             layoutParams.flags = WindowManager.LayoutParams.FLAG_DIM_BEHIND;
@@ -247,10 +235,10 @@
             setContentView(R.layout.bannerdialog);
 
             //셋팅
-            mPositiveButton=(Button)findViewById(R.id.btn_ok);
-            mNegativeButton=(Button)findViewById(R.id.btn_no);
+            mPositiveButton = (Button) findViewById(R.id.btn_ok);
+            mNegativeButton = (Button) findViewById(R.id.btn_no);
             mAdView = findViewById(R.id.adView);
-            MobileAds.initialize(getApplicationContext(),getString(R.string.admob_app_id));
+            MobileAds.initialize(getApplicationContext(), getString(R.string.admob_app_id));
             mAdView = findViewById(R.id.adView);
             AdRequest adRequest = new AdRequest.Builder().build();
             mAdView.loadAd(adRequest);
@@ -276,7 +264,4 @@
     }
 
 
-}
-
-
-
+}
\ No newline at end of file
Index: app/src/main/java/com/example/choimyeongsik/BookBank/BottomNavigationHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\nimport android.annotation.SuppressLint;\r\n\r\nimport android.util.Log;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationItemView;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationMenuView;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\nimport java.lang.reflect.Field;\r\n\r\npublic class BottomNavigationHelper {\r\n    @SuppressLint(\"RestrictedApi\")\r\n    static void disableShiftMode(BottomNavigationView view) {\r\n        BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.getChildAt(0);\r\n        try {\r\n            Field shiftingMode = menuView.getClass().getDeclaredField(\"mShiftingMode\");\r\n            shiftingMode.setAccessible(true);\r\n            shiftingMode.setBoolean(menuView, false);\r\n            shiftingMode.setAccessible(false);\r\n            for (int i = 0; i < menuView.getChildCount(); i++) {\r\n                BottomNavigationItemView item = (BottomNavigationItemView) menuView.getChildAt(i);\r\n\r\n                item.setShifting(false);\r\n                // set once again checked value, so view will be updated\r\n\r\n                item.setChecked(item.getItemData().isChecked());\r\n            }\r\n        } catch (NoSuchFieldException e) {\r\n            Log.e(\"BNVHelper\", \"Unable to get shift mode field\", e);\r\n        } catch (IllegalAccessException e) {\r\n            Log.e(\"BNVHelper\", \"Unable to change value of shift mode\", e);\r\n        }\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/BottomNavigationHelper.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/Utils/BottomNavigationHelper.java	(date 1618047143015)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.Utils;
 import android.annotation.SuppressLint;
 
 import android.util.Log;
@@ -11,7 +11,7 @@
 
 public class BottomNavigationHelper {
     @SuppressLint("RestrictedApi")
-    static void disableShiftMode(BottomNavigationView view) {
+    public static void disableShiftMode(BottomNavigationView view) {
         BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.getChildAt(0);
         try {
             Field shiftingMode = menuView.getClass().getDeclaredField("mShiftingMode");
Index: app/src/main/java/com/example/choimyeongsik/BookBank/FragmentHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.icu.text.SimpleDateFormat;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.select.Elements;\r\nimport org.w3c.dom.Document;\r\nimport org.w3c.dom.Node;\r\nimport org.w3c.dom.NodeList;\r\nimport org.xml.sax.InputSource;\r\n\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\nimport javax.xml.parsers.DocumentBuilder;\r\nimport javax.xml.parsers.DocumentBuilderFactory;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.recyclerview.widget.SimpleItemAnimator;\r\n\r\nimport static com.kakao.util.helper.Utility.getPackageInfo;\r\n\r\npublic class FragmentHome extends Fragment {\r\n    EditText edittext;\r\n    libraybook bookadapter;\r\n    BestBookadapter bestbookadapter;\r\n    Context mContext;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private RecyclerView mRecyclerView,mRecyclerView2;\r\n    private LinearLayoutManager mLayoutManager,mLayoutManager2;\r\n    ArrayList<datalibraryVO> blist = new ArrayList <>();\r\n    ArrayList<BestBookVO> elist = new ArrayList <>();\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        this.mContext = context;\r\n    }\r\n\r\n\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        ViewGroup rootview = (ViewGroup)inflater.inflate(R.layout.fragment_home,container,false);\r\n        edittext = (EditText)rootview.findViewById(R.id.edit_book_search);\r\n        Log.d(\"ㅎㅇ\",\"돌아옴\");\r\n        mRecyclerView = rootview.findViewById(R.id.recycler_book);\r\n        mRecyclerView2 = rootview.findViewById(R.id.best_book);\r\n        mRecyclerView.setHasFixedSize(true);\r\n        mRecyclerView2.setHasFixedSize(true);\r\n        mLayoutManager = new LinearLayoutManager(getContext());\r\n        mLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);\r\n        mLayoutManager2 = new LinearLayoutManager(getContext());\r\n        mLayoutManager2.setOrientation(LinearLayoutManager.HORIZONTAL);\r\n        mRecyclerView.setLayoutManager(mLayoutManager);\r\n        mRecyclerView2.setLayoutManager(mLayoutManager2);\r\n\r\n        Date currentTime = Calendar.getInstance().getTime();\r\n        SimpleDateFormat dayFormat = new SimpleDateFormat(\"dd\", Locale.getDefault());\r\n        SimpleDateFormat monthFormat = new SimpleDateFormat(\"MM\", Locale.getDefault());\r\n        SimpleDateFormat yearFormat = new SimpleDateFormat(\"yyyy\", Locale.getDefault());\r\n        String year = yearFormat.format(currentTime);\r\n        String month = monthFormat.format(currentTime);\r\n        String day = dayFormat.format(currentTime);\r\n         int dayi = Integer.parseInt(day);\r\n         int d,d2;\r\n         String s,s2;\r\n        if (7 < dayi) {                // 도서관 날짜구하기\r\n            d = 8;\r\n            d2 = dayi;\r\n            s = String.format(\"%02d\", d);\r\n            s2 = Integer.toString(d2);\r\n        } else {\r\n            d = 1;\r\n            d2  = 7;\r\n             s = String.format(\"%02d\", d);\r\n             s2 = String.format(\"%02d\", d2);\r\n        }\r\n        if (15 < dayi) {\r\n            d = 16;\r\n            d2 = dayi;\r\n            s = Integer.toString(d);\r\n            s2 = Integer.toString(d2);\r\n        }\r\n        if (23 < dayi) {\r\n            d = 24;\r\n            d2 = dayi;\r\n            s = Integer.toString(d);\r\n            s2 = Integer.toString(d2);\r\n        }\r\n        String time = year + \"-\" + month + \"-\" + s + \"&endDt=\" + year + \"-\" + month + \"-\" + s2;\r\n        String booktimer = \"http://data4library.kr/api/loanItemSrch?authKey=01ac025572c930c78ee563df2ff9829e85be0b408ad7786afa0b1a2e40709aba&startDt=\" +\r\n                time;\r\n\r\n       library librarya = new library();      // 도서정보나루 인기도서\r\n        librarya.execute(booktimer);\r\n        WeekBest weekBest = new WeekBest();  //교보문고 베스트셀러\r\n        weekBest.execute();\r\n\r\n\r\n        edittext.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n            @Override\r\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) { // 책검색\r\n                switch ( actionId) {\r\n                    case EditorInfo.IME_ACTION_SEARCH:\r\n\r\n                        String title = edittext.getText().toString();\r\n                        Intent intent = new Intent(getActivity(), book_search.class);\r\n                        intent.putExtra(\"HOME\", \"HOME\");\r\n                        intent.putExtra(\"title\", title);\r\n                        startActivity(intent);\r\n                        break;\r\n                    default:\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n        mRecyclerView.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), mRecyclerView, new ClickListener() {\r\n            @Override\r\n            public void onClick(View view, int position) {          // 도서관 인기 메인에서 클릭시\r\n                book_search.BookTask  oi = new book_search(). new BookTask(mContext);\r\n                String a = blist.get(position).getIsbn13();\r\n                oi.execute(a);\r\n            }\r\n            @Override\r\n            public void onLongClick(View view, int position) {\r\n            }\r\n        }));\r\n\r\n        mRecyclerView2.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), mRecyclerView2, new ClickListener() {\r\n            @Override\r\n            public void onClick(View view, int position) {\r\n                book_search.BookTask  oi = new book_search(). new BookTask(mContext); // 교보문고 베스트셀러 클릭시\r\n                String a = elist.get(position).getBest_isbn13();\r\n                oi.execute(a);\r\n            }\r\n\r\n            @Override\r\n            public void onLongClick(View view, int position) {\r\n\r\n            }\r\n        }));\r\n\r\n\r\n        return rootview;\r\n    }\r\n    class library extends AsyncTask<String, Void, String> {\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            bookadapter = new libraybook(blist, mContext);\r\n            mRecyclerView.setAdapter(bookadapter);\r\n\r\n        }\r\n        @Override\r\n        protected String doInBackground(String... zkzk) {\r\n\r\n            try {\r\n                URL url = new URL(zkzk[0]);\r\n                DocumentBuilderFactory factory =\r\n                        DocumentBuilderFactory.newInstance();\r\n                DocumentBuilder builder = factory.newDocumentBuilder(); //XML문서 빌더 객체를 생성\r\n                Document document = builder.parse(new InputSource(url.openStream())); //XML문서를 파싱한다.\r\n                document.getDocumentElement().normalize(); // 공백등 제거\r\n                NodeList nodeList = document.getElementsByTagName(\"doc\");\r\n\r\n                for(int i=0; i< 15; i++) {\r\n                    Node docs = nodeList.item(i);\r\n                    Log.d(\"뭐야1\", String.valueOf(nodeList.getLength()));\r\n                    NodeList cList = docs.getChildNodes();\r\n                    datalibraryVO b = new datalibraryVO();\r\n                    for(int k=0; k<cList.getLength(); k++) {\r\n                        Node item = cList.item(k);\r\n                        String value = item.getNodeName();\r\n                        if(value.equals(\"bookname\")) b.setTitle(item.getTextContent());\r\n                        if (value.equals(\"authors\")) b.setAuthors(item.getTextContent());\r\n                        if (value.equals(\"isbn13\")) b.setIsbn13(item.getTextContent());\r\n                        if (value.equals(\"bookImageURL\")) b.setBookImageURL(item.getTextContent());\r\n                    }\r\n                    blist.add(b);\r\n                }\r\n\r\n\r\n\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                Log.e(\"home\", e.getMessage());\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    class WeekBest extends AsyncTask <String, Integer, String> {\r\n        ProgressDialog asyncDialog = new ProgressDialog(mContext);\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            asyncDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n            asyncDialog.setMessage(\"주간 베스트 목록을 불러오는중입니다. . \");\r\n            asyncDialog.show();\r\n            super.onPreExecute();\r\n\r\n\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n            RecyclerView.ItemAnimator animator = mRecyclerView2.getItemAnimator();\r\n            if (animator instanceof SimpleItemAnimator) {\r\n                ((SimpleItemAnimator) animator).setSupportsChangeAnimations(false);\r\n            }\r\n            bestbookadapter = new BestBookadapter(elist);\r\n            mRecyclerView2.setAdapter(bestbookadapter);\r\n            asyncDialog.dismiss();\r\n        }\r\n\r\n        @Override\r\n        protected String doInBackground(String... strings) {\r\n\r\n            try {\r\n                org.jsoup.nodes.Document doc = Jsoup.connect\r\n                        (\"http://www.kyobobook.co.kr/bestSellerNew/bestseller.laf?orderClick=d79\").get();\r\n\r\n                Elements contents = doc.select(\"div.cover\").select(\"a[href]\");\r\n                Elements url = contents.select(\"img[src]\");\r\n                for(org.jsoup.nodes.Element ur : url) {\r\n                    BestBookVO s = new BestBookVO();\r\n                    String url2 = ur.attr(\"src\");\r\n                    String isbn13 = url2.substring(url2.lastIndexOf(\"l\"),url2.indexOf(\".jpg\"));\r\n                    String isbn = isbn13.replaceAll(\"l\", \"\");\r\n\r\n                    s.setBest_bookimageURL(url2);\r\n                    s.setBest_isbn13(isbn);\r\n                    elist.add(s);\r\n\r\n\r\n\r\n                }\r\n                for(BestBookVO bo : elist) {\r\n                    Log.d(\"멍\", bo.getBest_bookimageURL());\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public interface ClickListener {\r\n        void onClick(View view, int position);\r\n        void onLongClick(View view, int position);\r\n    }\r\n\r\n    public static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {\r\n\r\n        private GestureDetector gestureDetector;\r\n        private FragmentHome.ClickListener clickListener;\r\n\r\n        public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final FragmentHome.ClickListener clickListener) {\r\n            this.clickListener = clickListener;\r\n            gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\r\n                @Override\r\n                public boolean onSingleTapUp(MotionEvent e) {\r\n                    return true;\r\n                }\r\n\r\n                @Override\r\n                public void onLongPress(MotionEvent e) {\r\n                    View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\r\n                    if (child != null && clickListener != null) {\r\n                        clickListener.onLongClick(child, recyclerView.getChildAdapterPosition(child));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {\r\n            View child = rv.findChildViewUnder(e.getX(), e.getY());\r\n            if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {\r\n                clickListener.onClick(child, rv.getChildAdapterPosition(child));\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(RecyclerView rv, MotionEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/FragmentHome.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/FragmentHome.java	(date 1618046786558)
@@ -19,6 +19,11 @@
 import android.widget.EditText;
 import android.widget.TextView;
 
+import com.example.choimyeongsik.BookBank.adapter.BestBookadapter;
+import com.example.choimyeongsik.BookBank.adapter.librayBookadapter;
+import com.example.choimyeongsik.BookBank.model.BestBookVO;
+import com.example.choimyeongsik.BookBank.model.datalibraryVO;
+
 import org.jsoup.Jsoup;
 import org.jsoup.select.Elements;
 import org.w3c.dom.Document;
@@ -47,7 +52,7 @@
 
 public class FragmentHome extends Fragment {
     EditText edittext;
-    libraybook bookadapter;
+    librayBookadapter bookadapter;
     BestBookadapter bestbookadapter;
     Context mContext;
 
@@ -75,7 +80,6 @@
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         ViewGroup rootview = (ViewGroup)inflater.inflate(R.layout.fragment_home,container,false);
         edittext = (EditText)rootview.findViewById(R.id.edit_book_search);
-        Log.d("ㅎㅇ","돌아옴");
         mRecyclerView = rootview.findViewById(R.id.recycler_book);
         mRecyclerView2 = rootview.findViewById(R.id.best_book);
         mRecyclerView.setHasFixedSize(true);
@@ -97,7 +101,7 @@
          int dayi = Integer.parseInt(day);
          int d,d2;
          String s,s2;
-        if (7 < dayi) {                // 도서관 날짜구하기
+        if (7 < dayi) {                // 도서관 날짜구하기 1주일마다 베스트셀러변경
             d = 8;
             d2 = dayi;
             s = String.format("%02d", d);
@@ -137,7 +141,7 @@
                     case EditorInfo.IME_ACTION_SEARCH:
 
                         String title = edittext.getText().toString();
-                        Intent intent = new Intent(getActivity(), book_search.class);
+                        Intent intent = new Intent(getActivity(), BookSerachActivity.class);
                         intent.putExtra("HOME", "HOME");
                         intent.putExtra("title", title);
                         startActivity(intent);
@@ -151,7 +155,7 @@
         mRecyclerView.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), mRecyclerView, new ClickListener() {
             @Override
             public void onClick(View view, int position) {          // 도서관 인기 메인에서 클릭시
-                book_search.BookTask  oi = new book_search(). new BookTask(mContext);
+                BookSerachActivity.BookTask  oi = new BookSerachActivity(). new BookTask(mContext);
                 String a = blist.get(position).getIsbn13();
                 oi.execute(a);
             }
@@ -163,7 +167,7 @@
         mRecyclerView2.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), mRecyclerView2, new ClickListener() {
             @Override
             public void onClick(View view, int position) {
-                book_search.BookTask  oi = new book_search(). new BookTask(mContext); // 교보문고 베스트셀러 클릭시
+                BookSerachActivity.BookTask  oi = new BookSerachActivity(). new BookTask(mContext); // 교보문고 베스트셀러 클릭시
                 String a = elist.get(position).getBest_isbn13();
                 oi.execute(a);
             }
@@ -180,7 +184,7 @@
     class library extends AsyncTask<String, Void, String> {
         @Override
         protected void onPostExecute(String s) {
-            bookadapter = new libraybook(blist, mContext);
+            bookadapter = new librayBookadapter(blist, mContext);
             mRecyclerView.setAdapter(bookadapter);
 
         }
@@ -198,7 +202,7 @@
 
                 for(int i=0; i< 15; i++) {
                     Node docs = nodeList.item(i);
-                    Log.d("뭐야1", String.valueOf(nodeList.getLength()));
+                    Log.d("library", String.valueOf(nodeList.getLength()));
                     NodeList cList = docs.getChildNodes();
                     datalibraryVO b = new datalibraryVO();
                     for(int k=0; k<cList.getLength(); k++) {
@@ -274,7 +278,7 @@
 
                 }
                 for(BestBookVO bo : elist) {
-                    Log.d("멍", bo.getBest_bookimageURL());
+                    Log.d("URL", bo.getBest_bookimageURL());
                 }
             } catch (Exception e) {
                 e.printStackTrace();
Index: app/src/main/java/com/example/choimyeongsik/BookBank/FragmentGallery.java
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/FragmentGallery.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/FragmentGallery.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
@@ -1,82 +0,0 @@
-package com.example.choimyeongsik.BookBank;
-
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.os.Bundle;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import java.util.ArrayList;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-public class FragmentGallery extends Fragment {
-    public ArrayList <GridItem> mitems;
-    public RecyclerView recycler;
-    public GridItemAdapter adapter;
-    public GridItem gridItem;
-    Context mcontext;
-    byte[] ks;
-
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        ViewGroup rootview = (ViewGroup) inflater.inflate(R.layout.fragment_gallery, container, false);
-
-        TextView textView = (TextView)rootview.findViewById(R.id.image_count);
-
-        recycler = rootview.findViewById(R.id.grid_recycler);
-
-        int spanCount = 2;
-        int spacing = 20;
-        boolean includeEdge = false;
-
-
-
-
-        recycler.setLayoutManager(new GridLayoutManager(getActivity(),spanCount));
-        recycler.addItemDecoration(new SpacesItemDecoration(spanCount,spacing,includeEdge));
-        mitems = new ArrayList <GridItem>();
-        adapter = new GridItemAdapter(mitems, mcontext);
-        recycler.setAdapter(adapter);
-        GridArray();
-        adapter.notifyDataSetChanged();
-        textView.setText(String.valueOf(mitems.size()) + "개의 이미지");
-
-        return rootview;
-    }
-
-    public void GridArray() {
-        Cursor cs = null;
-        BookDatabase helper = new BookDatabase(getActivity());
-        SQLiteDatabase db = helper.getWritableDatabase();
-        cs = db.rawQuery("select image from tb_book", null);
-
-
-        if (cs.getCount() > 0 ) {
-            while (cs.moveToNext()) {
-                ks = cs.getBlob(cs.getColumnIndex("image"));
-                if (ks != null) {
-                    gridItem = new GridItem(
-                            cs.getBlob(cs.getColumnIndex("image")));
-                    mitems.add(gridItem);
-                }
-            }
-            }
-
-
-
-
-
-
-
-    }
-}
Index: app/src/main/java/com/example/choimyeongsik/BookBank/Fragmentlibrary.java
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/Fragmentlibrary.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/Fragmentlibrary.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
@@ -1,137 +0,0 @@
-package com.example.choimyeongsik.BookBank;
-
-import android.content.Context;
-import android.content.Intent;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.os.Bundle;
-
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import java.util.ArrayList;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-public class Fragmentlibrary extends Fragment {
-    private RecyclerItem mitem;
-    private ArrayList<RecyclerItem> mitems;
-    public RecyclerView recycler;
-    public RecyclerItemAdapter adapter;
-    private TextView bookcount;
-   ImageView setting_button;
-    private Context mcontext;
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
-        ViewGroup rootview = (ViewGroup)inflater.inflate(R.layout.fragment_library,container,false);
-        Log.d("나왔당", "onCreateView");
-        LinearLayoutManager mLayoutManager = new LinearLayoutManager(getActivity());
-        mLayoutManager.setReverseLayout(true);
-        mLayoutManager.setStackFromEnd(true);
-        mcontext = container.getContext();
-
-    setting_button = (ImageView)rootview.findViewById(R.id.button_setting);
-        bookcount = (TextView)rootview.findViewById(R.id.bookcount);
-        recycler = (RecyclerView)rootview.findViewById(R.id.main_RecyclerView);
-        recycler.setHasFixedSize(true);
-        int spanCount = 3;
-        int spacing = 20;
-        boolean includeEdge = false;
-        recycler.setLayoutManager(new GridLayoutManager(getActivity(),spanCount));
-        recycler.addItemDecoration(new SpacesItemDecoration(spanCount,spacing,includeEdge));
-        RecyclerDecoration spaceDecoration = new RecyclerDecoration(2);
-        BookDatabase helper = new BookDatabase(getContext());
-        mitems = new ArrayList <RecyclerItem>();
-        cursorArray();
-        adapter = new RecyclerItemAdapter(mitems);
-        adapter.notifyDataSetChanged();
-        recycler.setAdapter(adapter);
-
-        bookcount.setText("총" + String.valueOf(mitems.size()) + "권의 책을 추가하였습니다  ");
-
-
-        recycler.addOnItemTouchListener(new book_search.RecyclerTouchListener(getActivity(), recycler, new book_search.ClickListener() {
-            @Override
-            public void onClick(View view, int postion) {
-                String title  = mitems.get(postion).getTitle();
-                Log.d("하이", title);
-                String getThumbnail = mitems.get(postion).getThumbnail();
-                Intent intent = new Intent(getActivity(),book_record.class);
-                intent.putExtra("title", mitems.get(postion).getTitle());
-                intent.putExtra("thumbnail",mitems.get(postion).getThumbnail());
-                startActivity(intent);
-            }
-
-            @Override
-            public void onLongClick(View view, int postion) {
-
-            }
-        }));
-
-        setting_button.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(getActivity(), Setting.class);
-                startActivity(intent);
-            }
-        });
-
-
-
-        return rootview;
-    }
-
-
-
-    public void cursorArray() {
-
-        Cursor cs = null;
-        BookDatabase helper = new BookDatabase(getContext());
-        SQLiteDatabase db = helper.getWritableDatabase();
-        cs = db.rawQuery("select * from  tb_book", null);
-
-
-
-
-        while (cs.moveToNext()) {
-            String check = cs.getString(cs.getColumnIndex("title"));
-            if (check != null) {
-                mitem = new RecyclerItem(
-                        cs.getString(cs.getColumnIndex("title")),
-                        cs.getString(cs.getColumnIndex("pirce")),
-                        cs.getString(cs.getColumnIndex("publisher")),
-                        cs.getString(cs.getColumnIndex("authors")),
-                        cs.getString(cs.getColumnIndex("thumbnail")),
-                        cs.getString(cs.getColumnIndex("isbn")));
-
-
-                mitems.add(mitem);
-
-            }
-        }
-        cs.close();
-    }
-
-    public void refrsh() {
-        mitems = new ArrayList <RecyclerItem>();  // 임시대처
-        cursorArray();
-        adapter = new RecyclerItemAdapter(mitems);
-        adapter.notifyDataSetChanged();
-        recycler.setAdapter(adapter);
-    }
-
-
-
-
-}
Index: app/src/main/java/com/example/choimyeongsik/BookBank/FragmentRecord.java
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/FragmentRecord.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/FragmentRecord.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
@@ -1,232 +0,0 @@
-package com.example.choimyeongsik.BookBank;
-
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.graphics.Color;
-import android.os.Bundle;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.daasuu.cat.CountAnimationTextView;
-import com.github.mikephil.charting.charts.PieChart;
-import com.github.mikephil.charting.components.Description;
-import com.github.mikephil.charting.components.Legend;
-import com.github.mikephil.charting.data.Entry;
-import com.github.mikephil.charting.data.PieData;
-import com.github.mikephil.charting.data.PieDataSet;
-import com.github.mikephil.charting.data.PieEntry;
-import com.github.mikephil.charting.formatter.IValueFormatter;
-import com.github.mikephil.charting.formatter.PercentFormatter;
-import com.github.mikephil.charting.utils.ColorTemplate;
-import com.github.mikephil.charting.utils.ViewPortHandler;
-
-import java.text.DecimalFormat;
-import java.util.ArrayList;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-
-public class FragmentRecord extends Fragment {
-    TextView textView;
-    int fiction,Health,Literature,Economy,Linguistics,sociology,Humanities,History,infant,child,
-            elementary,elementary2,Adolescent,nature,Travel,Art,essay,comic,Assum,
-            examination,Religion,Hobby,Computer;
-    PieChart pieChart;
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
-        ViewGroup rootview = (ViewGroup) inflater.inflate(R.layout.fragment_record, container, false);
-        CountAnimationTextView countAnimationTextView = (CountAnimationTextView)rootview.findViewById(R.id.count_animation_textview);
-        pieChart = (PieChart)rootview.findViewById(R.id.piechart);
-        pieChart.setUsePercentValues(true);
-      /*  pieChart.getDescription().setEnabled(false);
-       pieChart.setExtraOffsets(5,10,5,5);
-        pieChart.setDragDecelerationFrictionCoef(0.95f);
-       pieChart.setDrawHoleEnabled(false);
-        pieChart.setHoleColor(Color.WHITE);
-       pieChart.setTransparentCircleRadius(61f); */
-
-
-
-
-
-
-
-        Cursor cs = null;
-        BookDatabase helper = new BookDatabase(getContext());
-        SQLiteDatabase db = helper.getWritableDatabase();
-        cs = db.rawQuery("select * from  tb_book", null);
-
-        int sd = 0;
-        int count = 0;
-        while (cs.moveToNext()) {
-            String as = cs.getString(cs.getColumnIndex("pirce"));
-            if (as != null) {
-                as = as.replaceAll(",", "");
-                int a = Integer.parseInt(as);
-                sd = sd + a;
-            }
-            String category = cs.getString(cs.getColumnIndex("category"));
-            if (category != null) {
-                category = category.replaceAll(" ", "").trim();
-                if (category.equals("건강/미용")) {
-                    Health += 1;
-                }
-                if (category.equals("소설")) {
-                    fiction += 1;
-                }
-                if (category.equals("문학(시,에세이 등)")) {
-                    Literature += 1;
-                }
-                if (category.equals("경제/경영")) {
-                    Economy += 1;
-                }
-                if (category.equals("어학(외국어)")) {
-                    Linguistics += 1;
-                }
-                if (category.equals("사회학")) {
-                    sociology += 1;
-                }
-                if (category.equals("인문학")) {
-                    Humanities += 1;
-
-                }
-                if (category.equals("역사/문화")) {
-                    History += 1;
-
-                }
-                if (category.equals("유아(0∼3세)")) {
-                    infant += 1;
-                }
-                if (category.equals("아동(4∼6세)")) {
-                    child += 1;
-                }
-                if (category.equals("초등1∼3학년")) {
-                    elementary += 1;
-
-                }
-                if (category.equals("초등4∼6학년 ")) {
-                    elementary2 += 1;
-                }
-                if (category.equals("청소년")) {
-                    Adolescent += 1;
-                }
-                if (category.equals("자연/과학")) {
-                    nature += 1;
-                }
-                if (category.equals("여행")) {
-                    Travel += 1;
-                }
-                if (category.equals("예술")) {
-                    Art += 1;
-                }
-                if (category.equals("논술/면접")) {
-                    essay += 1;
-                }
-                if (category.equals("만화")) {
-                    comic += 1;
-                }
-                if (category.equals("가정/생활")) {
-                    Assum += 1;
-                }
-                if (category.equals("수험서/자격증")) {
-                    examination += 1;
-                }
-                if (category.equals("종교")) {
-                    Religion += 1;
-                }
-                if (category.equals("취미")) {
-                    Hobby += 1;
-                }
-                if (category.equals("컴퓨터")) {
-                    Computer += 1;
-                }
-            }
-
-            }
-        ArrayList <PieEntry> yValues = new ArrayList<PieEntry>();
-        if(Health != 0) yValues.add(new PieEntry(Health, "건강/미용"));
-        if(fiction != 0) yValues.add(new PieEntry(fiction, "소설"));
-        if(Literature != 0) yValues.add(new PieEntry(Literature,"문학"));
-        if(Economy != 0)   yValues.add(new PieEntry(Economy,"경제/경영"));
-        if(Linguistics != 0)  yValues.add(new PieEntry(Linguistics,"어학"));
-        if(sociology != 0)  yValues.add(new PieEntry(sociology,"사회"));
-        if(Humanities != 0)    yValues.add(new PieEntry(Humanities,"인문학"));
-        if(History != 0)   yValues.add(new PieEntry(History,"역사/문화"));
-        if(infant != 0)   yValues.add(new PieEntry(infant ,"유아"));
-        if(child != 0)   yValues.add(new PieEntry(child,"아동"));
-        if(elementary != 0) yValues.add(new PieEntry(elementary ,"초등1∼3학년"));
-        if(elementary2 != 0)  yValues.add(new PieEntry(elementary2 ,"초등4∼6학년"));
-        if(Adolescent != 0)   yValues.add(new PieEntry(Adolescent,"청소년"));
-        if(nature != 0)  yValues.add(new PieEntry(nature,"자연/과학"));
-        if(Travel != 0)   yValues.add(new PieEntry(Travel,"여행"));
-        if(Art != 0)   yValues.add(new PieEntry(Art,"예술"));
-        if(essay != 0)   yValues.add(new PieEntry(essay ,"논술/면접"));
-        if(comic != 0)   yValues.add(new PieEntry(comic,"만화"));
-        if(Assum != 0)   yValues.add(new PieEntry(Assum,"가정/생활"));
-        if(examination != 0) yValues.add(new PieEntry(examination ,"수험서/자격증"));
-        if(Religion != 0)  yValues.add(new PieEntry(Religion,"종교"));
-        if(Hobby != 0)  yValues.add(new PieEntry(Hobby,"취미"));
-        if(Computer != 0) yValues.add(new PieEntry(Computer,"컴퓨터"));
-        Description description = new Description();
-        description.setText(""); //라벨
-        description.setTextSize(15);
-        pieChart.setDescription(description);
-        PieDataSet dataSet = new PieDataSet(yValues,"");
-        dataSet.setValueFormatter(new PercentFormatter(pieChart));
-        pieChart.setUsePercentValues(true);
-        pieChart.setEntryLabelTextSize(15f);
-        Legend i = pieChart.getLegend();
-        dataSet.setSliceSpace(3f);
-        dataSet.setSelectionShift(5f);
-        i.setTextSize(15f);
-
-
-
-
-        dataSet.setColors(ColorTemplate.PASTEL_COLORS);
-
-        PieData data = new PieData((dataSet));
-
-        data.setValueTextSize(13f);
-        data.setValueTextColor(Color.YELLOW);
-
-        pieChart.setData(data);
-
-
-
-
-
-
-
-
-        countAnimationTextView
-                .setDecimalFormat(new DecimalFormat("###,###,###"))
-                .setAnimationDuration(1000)
-                .countAnimation(0, sd);
-        return rootview;
-    }
-
-    public class MyValueFormatter implements IValueFormatter {
-
-        private DecimalFormat mFormat;
-
-        public MyValueFormatter() {
-            mFormat = new DecimalFormat("###,###,##0.0"); // use one decimal
-        }
-
-        @Override
-        public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {
-            // write your logic here
-            return mFormat.format(value) + " $";
-        }
-    }
-}
-
-
-
Index: app/src/main/res/layout/activity_contents_revise.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".contents_record\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_revise\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ImageView\r\n        android:layout_gravity=\"center\"\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/revise_imageview1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n    <LinearLayout\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_gravity=\"right\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:fontFamily=\"@font/don\"\r\n            android:background=\"@drawable/save_btn\"\r\n            android:id=\"@+id/camear_revise\"\r\n            android:text=\"카메라\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\" />\r\n\r\n        <Button\r\n            android:layout_marginLeft=\"5dp\"\r\n            android:fontFamily=\"@font/don\"\r\n            android:background=\"@drawable/save_btn\"\r\n            android:id=\"@+id/gild_revise\"\r\n            android:text=\"갤러리\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\" />\r\n        <View\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\" />\r\n        <Button\r\n            android:layout_marginLeft=\"5dp\"\r\n            android:layout_marginRight=\"5dp\"\r\n            android:fontFamily=\"@font/don\"\r\n            android:background=\"@drawable/del_btn\"\r\n            android:id=\"@+id/del_revise\"\r\n            android:text=\"삭제\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"/>\r\n    <Button\r\n        android:fontFamily=\"@font/don\"\r\n        android:background=\"@drawable/save_btn\"\r\n        android:id=\"@+id/revise_button\"\r\n        android:text=\"저장\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <EditText\r\n        android:layout_marginLeft=\"10dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@null\"\r\n        android:inputType=\"textMultiLine|textNoSuggestions\"\r\n        android:gravity=\"top\"\r\n        android:id=\"@+id/revise_contents\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"500dp\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_contents_revise.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_contents_revise.xml	(date 1618046494928)
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".contents_record"
+    tools:context=".RecordActivity"
     android:orientation="vertical">
 
     <androidx.appcompat.widget.Toolbar
Index: app/src/main/res/layout/activity_image_click_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".ImageClickView\">\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_imageview\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <com.github.chrisbanes.photoview.PhotoView\r\n        android:id=\"@+id/clickview\"\r\n        android:src=\"@drawable/ic_launcher_background\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_image_click_view.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_image_click_view.xml	(date 1618046786552)
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical"
-    tools:context=".ImageClickView">
+    tools:context=".ImageClickActivity">
 
 
     <androidx.appcompat.widget.Toolbar
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_new_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <background android:drawable=\"@drawable/ic_launcher_new_background\"/>\r\n    <foreground android:drawable=\"@mipmap/ic_launcher_new_foreground\"/>\r\n</adaptive-icon>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher_new_round.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher_new_round.xml	(date 1617965454320)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
     <background android:drawable="@drawable/ic_launcher_new_background"/>
-    <foreground android:drawable="@mipmap/ic_launcher_new_foreground"/>
+    <foreground android:drawable="@drawable/ic_launcher_new_foreground"/>
 </adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_new.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <background android:drawable=\"@drawable/ic_launcher_new_background\"/>\r\n    <foreground android:drawable=\"@mipmap/ic_launcher_new_foreground\"/>\r\n</adaptive-icon>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher_new.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher_new.xml	(date 1617965454579)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
     <background android:drawable="@drawable/ic_launcher_new_background"/>
-    <foreground android:drawable="@mipmap/ic_launcher_new_foreground"/>
+    <foreground android:drawable="@drawable/ic_launcher_new_foreground"/>
 </adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/layout/activity_setting.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".Setting\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_setting\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <Button\r\n        android:gravity=\"center\"\r\n        android:id=\"@+id/drive_backup\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"#FFFFFF\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:drawableLeft=\"@drawable/goodrive\"\r\n        android:drawablePadding=\"4dp\"\r\n        android:text=\"구글드라이브 백업   \"/>\r\n\r\n\r\n\r\n    <Button\r\n        android:id=\"@+id/drive_load\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"#FFFFFF\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:drawableLeft=\"@drawable/goodrive\"\r\n        android:drawablePadding=\"4dp\"\r\n        android:text=\"구글드라이브 복구   \"/>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_setting.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_setting.xml	(date 1618047143240)
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical"
-    tools:context=".Setting">
+    tools:context=".SettingActivity">
 
     <androidx.appcompat.widget.Toolbar
         android:id="@+id/toolbar_setting"
Index: app/src/main/res/layout/activity_contents_record.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".contents_record\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_content\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n    <ImageView\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/imageview1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"200dp\" />\r\n\r\n    <LinearLayout\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_gravity=\"right\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <Button\r\n\r\n        android:background=\"@drawable/save_btn\"\r\n        android:id=\"@+id/camear\"\r\n        android:text=\"카메라\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n    <Button\r\n        android:layout_marginLeft=\"5dp\"\r\n        android:background=\"@drawable/save_btn\"\r\n        android:id=\"@+id/gild\"\r\n        android:text=\"갤러리\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n        <View\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/contents_button\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@drawable/save_btn\"\r\n            android:text=\"작성하기\" />\r\n    </LinearLayout>\r\n    <EditText\r\n        android:hint=\"내용을 입력하세요\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@null\"\r\n        android:inputType=\"textMultiLine|textNoSuggestions\"\r\n        android:gravity=\"top\"\r\n        android:id=\"@+id/record_contents\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"500dp\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_contents_record.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_contents_record.xml	(date 1618046494920)
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".contents_record"
+    tools:context=".RecordActivity"
     android:orientation="vertical">
 
     <androidx.appcompat.widget.Toolbar
Index: app/src/main/java/com/example/choimyeongsik/BookBank/callback/KakaoRetrofit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/callback/KakaoRetrofit.java	(date 1618046936547)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/callback/KakaoRetrofit.java	(date 1618046936547)
@@ -0,0 +1,29 @@
+package com.example.choimyeongsik.BookBank.callback;
+
+import com.example.choimyeongsik.BookBank.model.DocumentList;
+
+import retrofit2.Call;
+import retrofit2.http.GET;
+import retrofit2.http.Headers;
+import retrofit2.http.Query;
+
+public interface KakaoRetrofit {
+    // GET/POST/DELETE/PUT 메소드들을 인터페이스에 구현하여 사용할 수 있다.
+    @Headers("Authorization: KakaoAK 3e82e4d9bea33046d8289b5e3eb53add")
+    @GET("v3/search/book")
+    // JSON Array를 리턴하므로 List<>가 되었다
+    Call <DocumentList> getDocument(
+            @Query("query") String title
+
+
+
+
+
+    );
+
+
+}
+
+
+
+
Index: app/src/main/res/layout/activity_book_search.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".book_search\"\r\n    android:background=\"#FFFFFF\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_too\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n        <TextView\r\n            android:fontFamily=\"@font/don\"\r\n            android:textColor=\"#000000\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"책 검색\"\r\n            android:layout_gravity=\"center\"\r\n            android:textSize=\"20sp\"\r\n            />\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n\r\n\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/kakabookView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"></androidx.recyclerview.widget.RecyclerView>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_book_search.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_book_search.xml	(date 1618046786788)
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".book_search"
+    tools:context=".BookSerachActivity"
     android:background="#FFFFFF"
     android:orientation="vertical">
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/contents_revise.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.FileProvider;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\npublic class contents_revise extends AppCompatActivity {\r\n    EditText editText;\r\n    Button revise_button;\r\n    Button camera;\r\n    Button gild;\r\n    Button del;\r\n    private Boolean isCamera = false;\r\n    final static int IMAGE_PICK = 300;\r\n    final static int IMAGE_CAMEAR = 400;\r\n    private File tempFile;\r\n    private Uri photoUri;\r\n    private Bitmap originalBm;\r\n    ImageView imageView1;\r\n    private Boolean isImage = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_contents_revise);\r\n        getWindow().setStatusBarColor(Color.parseColor(\"#D8D8D8\"));\r\n        Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar_revise);\r\n        setSupportActionBar(mToolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n\r\n\r\n\r\n\r\n        Intent intent = getIntent();\r\n        final String number = intent.getExtras().getString(\"number\");\r\n        editText = (EditText) findViewById(R.id.revise_contents);\r\n        revise_button = (Button) findViewById(R.id.revise_button);\r\n        gild = (Button) findViewById(R.id.gild_revise);\r\n        camera = (Button) findViewById(R.id.camear_revise);\r\n        imageView1 = (ImageView) findViewById(R.id.revise_imageview1);\r\n        del = (Button)findViewById(R.id.del_revise);\r\n        BookDatabase bookDatabase = new BookDatabase(getApplication());\r\n        SQLiteDatabase db = bookDatabase.getWritableDatabase();\r\n        Cursor cs = db.rawQuery(\"select * from  tb_book where  _id =  '\" + number + \"' \", null);\r\n        cs.moveToNext();\r\n        Log.i(\"확인\", number);\r\n        String title = cs.getString(8);\r\n        String content = cs.getString(11);\r\n        byte[] image = cs.getBlob(9);\r\n        editText.setText(content);\r\n        if (image != null) {        // 해당 _id에 이미지가 있으면\r\n            imageView1.setVisibility(View.VISIBLE);\r\n            Bitmap bmp = BitmapFactory.decodeByteArray(image, 0, image.length);\r\n            Log.d(\"레코드어댑터\", String.valueOf(bmp));\r\n            Glide.with(imageView1.getContext()).load(bmp).override(300, 300).into(imageView1);\r\n        }\r\n        revise_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                BookDatabase bookDatabase = new BookDatabase(getApplication());\r\n                SQLiteDatabase db = bookDatabase.getWritableDatabase();\r\n                String revise_content = editText.getText().toString().trim();\r\n                ContentValues cv = new ContentValues();\r\n                if(isImage) {\r\n                    ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n                    originalBm.compress(Bitmap.CompressFormat.PNG, 100, out);\r\n                    cv.put(\"image\", out.toByteArray());\r\n                    db.execSQL(\"UPDATE tb_book SET contents = '\" + revise_content + \"' where _id = '\" + number + \"'\");\r\n                    db.update(\"tb_book\", cv, \"_id =\" + number, null);\r\n                } else {\r\n                    db.execSQL(\"UPDATE tb_book SET contents = '\" + revise_content + \"' where _id = '\" + number + \"'\");\r\n                }\r\n                finish();\r\n            }\r\n        });\r\n\r\n        camera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isImage = true;\r\n                takePhoto();\r\n            }\r\n        });\r\n\r\n        gild.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                isImage = true;\r\n                isCamera = false;\r\n                Intent intent = new Intent(Intent.ACTION_PICK);\r\n                intent.setType(MediaStore.Images.Media.CONTENT_TYPE);\r\n                startActivityForResult(intent, IMAGE_PICK);\r\n\r\n            }\r\n        });\r\n        del.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                BookDatabase bookDatabase = new BookDatabase(getApplicationContext());\r\n                SQLiteDatabase db = bookDatabase.getWritableDatabase();\r\n                Cursor cs = db.rawQuery(\"select * from  tb_book where  _id =  '\" + number + \"' \", null);\r\n                cs.moveToNext();\r\n                String content = cs.getString(11);\r\n                byte[] image = cs.getBlob(9);\r\n                db.execSQL(\"DELETE FROM tb_book WHERE contents = '\" + content + \"';\");\r\n                db.execSQL(\"DELETE FROM tb_book WHERE image = '\" + image + \"';\");\r\n\r\n\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != Activity.RESULT_OK) {\r\n            isImage = false;\r\n            if (tempFile != null) {\r\n                if (tempFile.exists()) {\r\n                    if (tempFile.delete()) {\r\n                        Log.e(\"GD\", tempFile.getAbsolutePath() + \" 삭제 성공\");\r\n                        tempFile = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (requestCode == IMAGE_PICK) {\r\n\r\n            photoUri = data.getData();\r\n\r\n            Cursor cursor = null;\r\n\r\n            try {\r\n\r\n                /*\r\n                 *  Uri 스키마를\r\n                 *  content:/// 에서 file:/// 로  변경한다.\r\n                 */\r\n                String[] proj = {MediaStore.Images.Media.DATA};\r\n\r\n                assert photoUri != null;\r\n                cursor = getContentResolver().query(photoUri, proj, null, null, null);\r\n\r\n                assert cursor != null;\r\n                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\r\n\r\n                cursor.moveToFirst();\r\n\r\n                tempFile = new File(cursor.getString(column_index));\r\n\r\n            } finally {\r\n                if (cursor != null) {\r\n                    cursor.close();\r\n                }\r\n            }\r\n\r\n            setImage();\r\n\r\n        } else if (requestCode == IMAGE_CAMEAR) {\r\n            setImage();\r\n        }\r\n    }\r\n\r\n    private void setImage() {\r\n        ImageResizeUtils.resizeFile(tempFile, tempFile, 1280, isCamera);\r\n        BitmapFactory.Options options = new BitmapFactory.Options();\r\n        originalBm = BitmapFactory.decodeFile(tempFile.getAbsolutePath(), options);\r\n        Log.d(\"GD\", \"setImage : \" + tempFile.getAbsolutePath());\r\n        imageView1.setImageBitmap(originalBm);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void takePhoto() {\r\n        isCamera = true;\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n\r\n        try {\r\n            tempFile = createImageFile();\r\n        } catch (IOException e) {\r\n            Toast.makeText(this, \"이미지 처리 오류! 다시 시도해주세요.\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            e.printStackTrace();\r\n        }\r\n        if (tempFile != null) {\r\n\r\n            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\r\n\r\n                photoUri = FileProvider.getUriForFile(this,\r\n                        \"com.example.choimyeongsik.myapplication.provider\", tempFile);\r\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);\r\n                startActivityForResult(intent, IMAGE_CAMEAR);\r\n\r\n            } else {\r\n\r\n                photoUri = Uri.fromFile(tempFile);\r\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);\r\n                startActivityForResult(intent, IMAGE_CAMEAR);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private File createImageFile() throws IOException {\r\n        String timeStamp = new SimpleDateFormat(\"HHmmss\").format(new Date());\r\n        String imageFileName = \"Largo_\" + timeStamp + \"_\";\r\n        File storageDir = new File(Environment.getExternalStorageDirectory() + \"/Largo/\");\r\n        if (!storageDir.exists()) storageDir.mkdirs();\r\n        File image = File.createTempFile(imageFileName, \".jpg\", storageDir);\r\n\r\n        return image;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case android.R.id.home:{ //toolbar의 back키 눌렀을 때 동작\r\n                finish();\r\n                return true;\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n}
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/contents_revise.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/ReviseActivity.java	(date 1618047143023)
@@ -25,6 +25,8 @@
 import android.widget.Toast;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.DB.BookDatabase;
+import com.example.choimyeongsik.BookBank.Utils.ImageResizeUtils;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;
@@ -32,7 +34,7 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 
-public class contents_revise extends AppCompatActivity {
+public class ReviseActivity extends AppCompatActivity {
     EditText editText;
     Button revise_button;
     Button camera;
@@ -72,7 +74,6 @@
         SQLiteDatabase db = bookDatabase.getWritableDatabase();
         Cursor cs = db.rawQuery("select * from  tb_book where  _id =  '" + number + "' ", null);
         cs.moveToNext();
-        Log.i("확인", number);
         String title = cs.getString(8);
         String content = cs.getString(11);
         byte[] image = cs.getBlob(9);
Index: app/src/main/res/layout/grid_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<com.example.choimyeongsik.BookBank.SquareLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <ImageView\r\n        android:scaleType=\"centerCrop\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:src=\"@drawable/testimage\"\r\n        android:id=\"@+id/gridimage\"\r\n        android:layout_width=\"140dp\"\r\n        android:layout_height=\"200dp\" />\r\n    <TextView\r\n        android:text=\"\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n\r\n</com.example.choimyeongsik.BookBank.SquareLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/grid_view.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/grid_view.xml	(date 1618046936555)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.example.choimyeongsik.BookBank.SquareLayout
+<com.example.choimyeongsik.BookBank.decoration.SquareLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
@@ -18,4 +18,4 @@
         android:layout_height="wrap_content" />
 
 
-</com.example.choimyeongsik.BookBank.SquareLayout>
\ No newline at end of file
+</com.example.choimyeongsik.BookBank.decoration.SquareLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerItemAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Context;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n\r\npublic class RecyclerItemAdapter extends RecyclerView.Adapter<RecyclerItemAdapter.ItemViewHolder> {\r\n    ArrayList<RecyclerItem> mitems;\r\n    private ArrayList<RecyclerItem> arrayList;\r\n    public Context mContext;\r\n\r\n    public RecyclerItemAdapter(ArrayList<RecyclerItem> items) {\r\n        mitems = items;\r\n        arrayList = new ArrayList<RecyclerItem>();\r\n\r\n    }\r\n\r\n\r\n    public RecyclerItemAdapter(Context context) {\r\n        this.mContext = context;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ItemViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.bookdbitem, viewGroup, false);\r\n        return new ItemViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ItemViewHolder itemViewHolder, int position) {\r\n       /*     itemViewHolder.title.setText(mitems.get(position).getTitle());\r\n        itemViewHolder.pirce.setText(mitems.get(position).getPirce());\r\n        itemViewHolder.publisher.setText(mitems.get(position).getPublisher());\r\n        itemViewHolder.auhors.setText(mitems.get(position).getAuthors()); */\r\n        Glide.with(itemViewHolder.dbimage.getContext()).load(mitems.get(position).getThumbnail()).override(300,300).into(itemViewHolder.dbimage);\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        Log.d(\"아이템카운트\", String.valueOf(mitems.size()));\r\n        return mitems.size();\r\n    }\r\n\r\n    public  class ItemViewHolder extends  RecyclerView.ViewHolder {\r\n\r\n        private TextView title;\r\n        private TextView pirce;\r\n        private TextView publisher;\r\n        private TextView auhors;\r\n        private ImageView dbimage;\r\n\r\n        CardView cardView;\r\n\r\n        public ItemViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n       /*     title = (TextView)itemView.findViewById(R.id.dbtitle);\r\n            pirce = (TextView)itemView.findViewById(R.id.dbpirce);\r\n            publisher = (TextView)itemView.findViewById(R.id.dbpublisher);\r\n            auhors = (TextView)itemView.findViewById(R.id.dbauthors); */\r\n            dbimage = (ImageView) itemView.findViewById(R.id.dbimage);\r\n\r\n       ;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerItemAdapter.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/RecyclerItemAdapter.java	(date 1618046155952)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 import android.content.Context;
 
@@ -10,6 +10,8 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.R;
+import com.example.choimyeongsik.BookBank.model.RecyclerItem;
 
 import java.util.ArrayList;
 
Index: app/src/main/res/layout/activity_book_record.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".book_record\"\r\n    android:background=\"#FFFFFF\"\r\n    android:orientation=\"vertical\">\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_record\"\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:minHeight=\"?attr/actionBarSize\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\r\n        >\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <ImageView\r\n        android:background=\"@drawable/image_shadow\"\r\n        android:id=\"@+id/thumbnail\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:src=\"@drawable/ic_launcher_background\" />\r\n\r\n    <TextView\r\n        android:layout_marginTop=\"10dp\"\r\n        android:textSize=\"20dp\"\r\n        android:textColor=\"#000000\"\r\n        android:fontFamily=\"@font/nanumsquaer\"\r\n        android:id=\"@+id/title\"\r\n        android:text=\"미움받을 용기\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n    <TextView\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:text=\"2020-03-24\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_gravity=\"center\">\r\n\r\n    <Button\r\n        android:background=\"@drawable/save_btn\"\r\n        android:id=\"@+id/record_button\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"메모하기\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n    <Button\r\n        android:layout_marginLeft=\"5dp\"\r\n        android:background=\"@drawable/del_btn\"\r\n        android:id=\"@+id/record_dele\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"책 제거하기\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n\r\n\r\n    </LinearLayout>\r\n<LinearLayout\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\nandroid:orientation=\"horizontal\">\r\n\"    <TextView\r\n    android:textColor=\"#000000\"\r\n    android:fontFamily=\"@font/nanumsquaer\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:textSize=\"20dp\"\r\n        android:text=\"메모\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n    <TextView\r\n        android:textColor=\"#000000\"\r\n        android:fontFamily=\"@font/moneyfont\"\r\n        android:id=\"@+id/memocount\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:text=\"2\"\r\n        android:textSize=\"20dp\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\" />\r\n\r\n\r\n</LinearLayout>\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/record_Recycler\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"></androidx.recyclerview.widget.RecyclerView>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_book_record.xml	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/res/layout/activity_book_record.xml	(date 1618046786576)
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".book_record"
+    tools:context=".BookRecordActivity"
     android:background="#FFFFFF"
     android:orientation="vertical">
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/GridItemAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class GridItemAdapter extends RecyclerView.Adapter<GridItemAdapter.ViewHolder> {\r\n    private ArrayList<GridItem> mitems;\r\n    private Context context;\r\n    public GridItemAdapter(ArrayList<GridItem> items, Context context) {\r\n        this.mitems = items;\r\n        this.context = context;\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public GridItemAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.grid_view,viewGroup,false);\r\n        return new GridItemAdapter.ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull GridItemAdapter.ViewHolder viewHolder, final int i) {\r\n        if (mitems.get(i).getImage() != null) {\r\n            Bitmap bmp = BitmapFactory.decodeByteArray(mitems.get(i).getImage(), 0, mitems.get(i).getImage().length);\r\n            Glide.with(viewHolder.imageView.getContext()).load(bmp).override(300,300).into(viewHolder.imageView);\r\n        }\r\n        viewHolder.imageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {           // 이미지클릭시 확대\r\n                ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n                Bitmap bit = BitmapFactory.decodeByteArray(mitems.get(i).getImage(), 0,mitems.get(i).getImage().length);\r\n                bit.compress(Bitmap.CompressFormat.JPEG,100,stream);\r\n                byte[] byteArray = stream.toByteArray();\r\n                Context context = v.getContext();\r\n                Intent intent = new Intent(v.getContext(),ImageClickView.class);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                intent.putExtra(\"image\", byteArray);\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mitems.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n       private ImageView imageView;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            imageView = (ImageView)itemView.findViewById(R.id.gridimage);\r\n\r\n\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/GridItemAdapter.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/GridItemAdapter.java	(date 1618046786836)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 import android.content.Context;
 import android.content.Intent;
@@ -11,6 +11,9 @@
 import android.widget.ImageView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.model.GridItem;
+import com.example.choimyeongsik.BookBank.ImageClickActivity;
+import com.example.choimyeongsik.BookBank.R;
 
 import java.io.ByteArrayOutputStream;
 import java.util.ArrayList;
@@ -57,7 +60,7 @@
                 bit.compress(Bitmap.CompressFormat.JPEG,100,stream);
                 byte[] byteArray = stream.toByteArray();
                 Context context = v.getContext();
-                Intent intent = new Intent(v.getContext(),ImageClickView.class);
+                Intent intent = new Intent(v.getContext(), ImageClickActivity.class);
                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                 intent.putExtra("image", byteArray);
                 context.startActivity(intent);
Index: app/src/main/java/com/example/choimyeongsik/BookBank/SpacesItemDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.graphics.Rect;\r\n\r\nimport android.view.View;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class SpacesItemDecoration extends RecyclerView.ItemDecoration {\r\n    private int spanCount;\r\n    private int spacing;\r\n    private boolean includeEdge;\r\n\r\n    public SpacesItemDecoration(int spanCount, int spacing, boolean includeEdge) {\r\n        this.spanCount = spanCount;\r\n        this.spacing = spacing;\r\n        this.includeEdge = includeEdge;\r\n    }\r\n\r\n    @Override\r\n    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\r\n        int position = parent.getChildAdapterPosition(view); // item position\r\n        int column = position % spanCount; // item column\r\n\r\n        if (includeEdge) {\r\n            outRect.left = spacing - column * spacing / spanCount; // spacing - column * ((1f / spanCount) * spacing)\r\n            outRect.right = (column + 1) * spacing / spanCount; // (column + 1) * ((1f / spanCount) * spacing)\r\n\r\n            if (position < spanCount) { // top edge\r\n                outRect.top = spacing;\r\n            }\r\n            outRect.bottom = spacing; // item bottom\r\n        } else {\r\n            outRect.left = column * spacing / spanCount; // column * ((1f / spanCount) * spacing)\r\n            outRect.right = spacing - (column + 1) * spacing / spanCount; // spacing - (column + 1) * ((1f /    spanCount) * spacing)\r\n            if (position >= spanCount) {\r\n                outRect.top = spacing; // item top\r\n            }\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/SpacesItemDecoration.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/decoration/SpacesItemDecoration.java	(date 1618046936512)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.decoration;
 
 import android.graphics.Rect;
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/BookDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Context;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\npublic class BookDatabase extends SQLiteOpenHelper {\r\n    private Context mContext;\r\n    public static String tableName = \"container\";\r\n    public static final int DATABASE_VERSION = 9 ;\r\n\r\n    public BookDatabase(Context context){\r\n        super(context,tableName, null, DATABASE_VERSION);\r\n        mContext = context;\r\n\r\n    }\r\n    @Override\r\n    public void onCreate(SQLiteDatabase sqLiteDatabase) {\r\n        String bookSQL = \"create table tb_book\" +\r\n                \"(_id integer PRIMARY KEY autoincrement,\" +\r\n                \"title,\" +\r\n                \"pirce,\" +\r\n                \"authors,\" +\r\n                \"publisher,\" +\r\n                \"category,\" +\r\n                \"thumbnail,\" +\r\n                \"isbn,\" +\r\n                \"name,\" +\r\n                \"image,\" + \"BLOB,\" +\r\n                \"contents)\";\r\n\r\n        sqLiteDatabase.execSQL(bookSQL);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\r\n        if(newVersion == DATABASE_VERSION) {\r\n            sqLiteDatabase.execSQL(\"drop table tb_book\");\r\n            onCreate(sqLiteDatabase);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/BookDatabase.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/DB/BookDatabase.java	(date 1618046786539)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.DB;
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/SquareLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.annotation.TargetApi;\r\nimport android.content.Context;\r\nimport android.os.Build;\r\nimport android.util.AttributeSet;\r\nimport android.widget.RelativeLayout;\r\n\r\npublic class SquareLayout extends RelativeLayout {              // 그리드 일정하게 정렬\r\n    public SquareLayout(Context context) {\r\n        super(context);\r\n    }\r\n\r\n    public SquareLayout(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n    }\r\n\r\n    public SquareLayout(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n    }\r\n\r\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\r\n    public SquareLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\r\n        super(context, attrs, defStyleAttr, defStyleRes);\r\n    }\r\n\r\n    @Override\r\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\r\n        // Set a square layout.\r\n        super.onMeasure(widthMeasureSpec, widthMeasureSpec);\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/SquareLayout.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/decoration/SquareLayout.java	(date 1618046936499)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.decoration;
 
 import android.annotation.TargetApi;
 import android.content.Context;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/BestBookadapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class BestBookadapter extends RecyclerView.Adapter<BestBookadapter.BestViewHolder> {\r\n    private ArrayList<BestBookVO> mitem;\r\n    public BestBookadapter(ArrayList<BestBookVO> itmes) {\r\n        this.mitem = itmes;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public BestBookadapter.BestViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.best_book,viewGroup,false);\r\n        return new BestViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull BestBookadapter.BestViewHolder bestViewHolder, int i) {\r\n        Glide.with(bestViewHolder.imageView.getContext()).load(mitem.get(i).getBest_bookimageURL()).override(500,500).into(bestViewHolder.imageView);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mitem.size();\r\n    }\r\n\r\n    public class BestViewHolder extends  RecyclerView.ViewHolder {\r\n        ImageView imageView;\r\n        public BestViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            imageView = (ImageView)itemView.findViewById(R.id.best_image);\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/BestBookadapter.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/BestBookadapter.java	(date 1618045953558)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 
 import android.view.LayoutInflater;
@@ -7,6 +7,8 @@
 import android.widget.ImageView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.model.BestBookVO;
+import com.example.choimyeongsik.BookBank.R;
 
 import java.util.ArrayList;
 
Index: app/src/main/res/drawable-v24/ic_launcher_new_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v24/ic_launcher_new_foreground.xml	(date 1617965454484)
+++ app/src/main/res/drawable-v24/ic_launcher_new_foreground.xml	(date 1617965454484)
@@ -0,0 +1,36 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+  <group android:scaleX="0.8"
+      android:scaleY="0.8"
+      android:translateX="10.8"
+      android:translateY="10.8">
+      <path
+          android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+          <aapt:attr name="android:fillColor">
+              <gradient
+                  android:startY="49.59793"
+                  android:startX="42.9492"
+                  android:endY="92.4963"
+                  android:endX="85.84757"
+                  android:type="linear">
+                  <item
+                      android:color="#44000000"
+                      android:offset="0.0" />
+                  <item
+                      android:color="#00000000"
+                      android:offset="1.0" />
+              </gradient>
+          </aapt:attr>
+      </path>
+      <path
+          android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+          android:fillColor="#FFFFFF"
+          android:fillType="nonZero"
+          android:strokeWidth="1"
+          android:strokeColor="#00000000"/>
+  </group>
+</vector>
\ No newline at end of file
Index: app/src/main/java/com/example/choimyeongsik/BookBank/BookAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n\r\npublic class BookAdapter extends RecyclerView.Adapter<BookAdapter.BookViewHolder> {\r\n    private ArrayList<KAKAOBookVO> mitem;\r\n\r\n\r\n    public BookAdapter(ArrayList<KAKAOBookVO> items) {\r\n        this.mitem = items;\r\n    }\r\n\r\n\r\n\r\n\r\n    public static class BookViewHolder extends  RecyclerView.ViewHolder {\r\n        TextView booktitle;\r\n        TextView bookpublisher;\r\n        TextView booksale_price;\r\n        ImageView bookimage;\r\n        TextView bookauthors;\r\n        protected  RecyclerView recyclerView;\r\n\r\n\r\n\r\n\r\n\r\n\r\n        BookViewHolder(View view) {\r\n            super(view);\r\n            booktitle = (TextView) view.findViewById(R.id.booktitle);\r\n            bookpublisher = (TextView) view.findViewById(R.id.bookpublisher);\r\n\r\n            bookimage = (ImageView) view.findViewById(R.id.bookimage);\r\n            this.recyclerView = (RecyclerView)view.findViewById(R.id.kakabookView);\r\n            bookauthors = (TextView)view.findViewById(R.id.bookauthors);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public BookViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.bookitem,parent,false);\r\n\r\n\r\n        return new BookViewHolder(view);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull BookViewHolder holder, int position) {\r\n        ArrayList<String> authors = mitem.get(position).getAuthors();\r\n\r\n\r\n        String str = authors.set(0, authors.get(0));\r\n        Log.d(\"확인\", String.valueOf(str));\r\n\r\n        BookViewHolder bookViewHolder = (BookViewHolder) holder;\r\n        bookViewHolder.bookauthors.setText(String.valueOf(str));\r\n        bookViewHolder.booktitle.setText(mitem.get(position).getTitle());\r\n        // bookViewHolder.booksale_price.setText(mitem.get(position).getSale_price() +\"원\");\r\n        bookViewHolder.bookpublisher.setText(mitem.get(position).getPublisher());\r\n        Glide.with(bookViewHolder.bookimage.getContext()).load(mitem.get(position).getThumbnail()).override(300,300).into(bookViewHolder.bookimage);\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mitem.size();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/BookAdapter.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/BookAdapter.java	(date 1618045953524)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 
 import android.util.Log;
@@ -9,6 +9,8 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.model.KAKAOBookVO;
+import com.example.choimyeongsik.BookBank.R;
 
 import java.util.ArrayList;
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/GridItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\npublic class GridItem {\r\n    private byte[] image;\r\n\r\n    public byte[] getImage() {\r\n        return image;\r\n    }\r\n\r\n    public void setImage(byte[] image) {\r\n        this.image = image;\r\n    }\r\n\r\n    public GridItem(byte[] image) {\r\n        this.image = image;\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/GridItem.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/GridItem.java	(date 1618046786854)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 public class GridItem {
     private byte[] image;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/KAKAOBookVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class KAKAOBookVO {\r\n    private ArrayList<String> authors;\r\n    private String contents;\r\n    private String datetime;\r\n\r\n    public ArrayList<String> getAuthors() {\r\n        return authors;\r\n    }\r\n\r\n    private String isbn;\r\n    private String price;\r\n    public void setAuthors(ArrayList<String> authors) {\r\n        this.authors = authors;\r\n    }\r\n\r\n    public KAKAOBookVO() {\r\n\r\n    }\r\n    public KAKAOBookVO(ArrayList<String> authors, String contents, String datetime, String isbn, String price, String publisher, String sale_price, String status, String thumbnail, String title, ArrayList<String> translators, String url) {\r\n\r\n        this.authors = authors;\r\n        this.contents = contents;\r\n        this.datetime = datetime;\r\n        this.isbn = isbn;\r\n        this.price = price;\r\n        this.publisher = publisher;\r\n        this.sale_price = sale_price;\r\n        this.status = status;\r\n        this.thumbnail = thumbnail;\r\n        this.title = title;\r\n        this.translators = translators;\r\n        this.url = url;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public String getContents() {\r\n        return contents;\r\n    }\r\n\r\n    public void setContents(String contents) {\r\n        this.contents = contents;\r\n    }\r\n\r\n    public String getDatetime() {\r\n        return datetime;\r\n    }\r\n\r\n    public void setDatetime(String datetime) {\r\n        this.datetime = datetime;\r\n    }\r\n\r\n    public String getIsbn() {\r\n        return isbn;\r\n    }\r\n\r\n    public void setIsbn(String isbn) {\r\n        this.isbn = isbn;\r\n    }\r\n\r\n    public String getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public void setPrice(String price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public String getPublisher() {\r\n        return publisher;\r\n    }\r\n\r\n    public void setPublisher(String publisher) {\r\n        this.publisher = publisher;\r\n    }\r\n\r\n    public String getSale_price() {\r\n        return sale_price;\r\n    }\r\n\r\n    public void setSale_price(String sale_price) {\r\n        this.sale_price = sale_price;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getThumbnail() {\r\n        return thumbnail;\r\n    }\r\n\r\n    public void setThumbnail(String thumbnail) {\r\n        this.thumbnail = thumbnail;\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public ArrayList<String> getTranslators() {\r\n        return translators;\r\n    }\r\n\r\n    public void setTranslators(ArrayList<String> translators) {\r\n        this.translators = translators;\r\n    }\r\n\r\n    public String getUrl() {\r\n        return url;\r\n    }\r\n\r\n    public void setUrl(String url) {\r\n        this.url = url;\r\n    }\r\n\r\n\r\n\r\n\r\n    private String publisher;\r\n    private String sale_price;\r\n    private String status;\r\n    private String thumbnail;\r\n    private String title;\r\n    private ArrayList<String> translators;\r\n    private String url;\r\n\r\n\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/KAKAOBookVO.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/KAKAOBookVO.java	(date 1618045953495)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 import java.util.ArrayList;
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\npublic class RecyclerItem {\r\n    private String title;\r\n    private String pirce;\r\n    private String authors;\r\n    private String publisher;\r\n    private String thumbnail;\r\n\r\n\r\n    public RecyclerItem(String title, String pirce, String authors, String publisher, String thumbnail, String isbn) {\r\n        this.title = title;\r\n        this.pirce = pirce;\r\n        this.authors = authors;\r\n        this.publisher = publisher;\r\n        this.thumbnail = thumbnail;\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public String getPirce() {\r\n        return pirce;\r\n    }\r\n\r\n    public void setPirce(String pirce) {\r\n        this.pirce = pirce;\r\n    }\r\n\r\n    public String getAuthors() {\r\n        return authors;\r\n    }\r\n\r\n    public void setAuthors(String authors) {\r\n        this.authors = authors;\r\n    }\r\n\r\n    public String getPublisher() {\r\n        return publisher;\r\n    }\r\n\r\n    public void setPublisher(String publisher) {\r\n        this.publisher = publisher;\r\n    }\r\n\r\n    public String getThumbnail() {\r\n        return thumbnail;\r\n    }\r\n\r\n    public void setThumbnail(String thumbnail) {\r\n        this.thumbnail = thumbnail;\r\n    }\r\n\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerItem.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/RecyclerItem.java	(date 1618046155925)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 public class RecyclerItem {
     private String title;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/libraybook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\n\r\nimport android.content.Context;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class libraybook extends RecyclerView.Adapter<libraybook.ItemViewHolder>{\r\n   private ArrayList<datalibraryVO> mitems;\r\n   Context mContext;\r\n\r\n    public libraybook(ArrayList<datalibraryVO> items, Context context) {\r\n       this.mitems = items;\r\n       this.mContext = context;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public ItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int i) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.libray_book, parent, false);\r\n        return new ItemViewHolder(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ItemViewHolder itemViewHolder, final int position) {\r\n        for(int i=0; i<mitems.size(); i++) {\r\n            if(!mitems.contains(mitems.get(position))) {\r\n                mitems.add(mitems.get(position));\r\n            }\r\n        }\r\n        Log.d(\"안녕\", mitems.get(position).getBookImageURL());\r\n        String value = mitems.get(position).getBookImageURL();\r\n        value = value.replaceAll(\"\\\\p{Z}\", \"\");\r\n   Glide.with(itemViewHolder.imageView.getContext()).load(value).override(500,500).into(itemViewHolder.imageView);\r\n   itemViewHolder.itemView.setOnClickListener(new View.OnClickListener() {\r\n       @Override\r\n       public void onClick(View v) {\r\n           Log.d(\"하이\", mitems.get(position).getTitle() + \"/\" + mitems.get(position).getIsbn13());\r\n            String url = mitems.get(position).getIsbn13();\r\n            url = url.replaceAll(\"\\\\p{Z}\", \"\");\r\n\r\n       }\r\n   });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mitems.size();\r\n    }\r\n\r\n\r\n    public static class ItemViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView imageView;\r\n        public ItemViewHolder(View itemView) {\r\n            super(itemView);\r\n            imageView = (ImageView)itemView.findViewById(R.id.imageview);\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/libraybook.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/librayBookadapter.java	(date 1618046786565)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 
 import android.content.Context;
@@ -10,17 +10,19 @@
 import android.widget.ImageView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.R;
+import com.example.choimyeongsik.BookBank.model.datalibraryVO;
 
 import java.util.ArrayList;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
-public class libraybook extends RecyclerView.Adapter<libraybook.ItemViewHolder>{
+public class librayBookadapter extends RecyclerView.Adapter<librayBookadapter.ItemViewHolder>{
    private ArrayList<datalibraryVO> mitems;
    Context mContext;
 
-    public libraybook(ArrayList<datalibraryVO> items, Context context) {
+    public librayBookadapter(ArrayList<datalibraryVO> items, Context context) {
        this.mitems = items;
        this.mContext = context;
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/Record_Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\n\r\npublic class Record_Item {\r\n\r\n    private String content;\r\n    private String name;\r\n    private byte[] image;\r\n    private String number;\r\n\r\n    public Record_Item(String name, String content, byte[] image, String number) {\r\nthis.image=image;\r\n        this.name = name;\r\n        this.content = content;\r\n        this.number = number;\r\n    }\r\n\r\n    public String getNumber() {\r\n        return number;\r\n    }\r\n\r\n    public void setNumber(String number) {\r\n        this.number = number;\r\n    }\r\n\r\n    public byte[] getImage() {\r\n        return image;\r\n    }\r\n\r\n    public void setImage(byte[] image) {\r\n        this.image = image;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n    public void setName() {\r\n        this.content = content;\r\n    }\r\n\r\n\r\n    public String getContent() {\r\n        return content;\r\n    }\r\n\r\n    public void setContent() {\r\n        this.content = content;\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/Record_Item.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/RecordVo.java	(date 1618046156112)
@@ -1,14 +1,14 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 
-public class Record_Item {
+public class RecordVo {
 
     private String content;
     private String name;
     private byte[] image;
     private String number;
 
-    public Record_Item(String name, String content, byte[] image, String number) {
+    public RecordVo(String name, String content, byte[] image, String number) {
 this.image=image;
         this.name = name;
         this.content = content;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/datalibraryVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\npublic class datalibraryVO {\r\n   private String title;\r\n    private String authors;\r\n    private String isbn13;\r\n    private String bookImageURL;\r\n\r\n    public datalibraryVO(){\r\n\r\n    }\r\n    public datalibraryVO(String title, String authors, String isbn13, String bookImageURL) {\r\n        this.title = title;\r\n        this.authors = authors;\r\n        this.isbn13 = isbn13;\r\n        this.bookImageURL = bookImageURL;\r\n\r\n\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public String getAuthors() {\r\n        return authors;\r\n    }\r\n\r\n    public void setAuthors(String authors) {\r\n        this.authors = authors;\r\n    }\r\n\r\n    public String getIsbn13() {\r\n        return isbn13;\r\n    }\r\n\r\n    public void setIsbn13(String isbn13) {\r\n        this.isbn13 = isbn13;\r\n    }\r\n\r\n    public String getBookImageURL() {\r\n        return bookImageURL;\r\n    }\r\n\r\n    public void setBookImageURL(String bookImageURL) {\r\n        this.bookImageURL = bookImageURL;\r\n    }\r\n\r\n\r\n\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/datalibraryVO.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/datalibraryVO.java	(date 1618045953603)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 public class datalibraryVO {
    private String title;
Index: app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.graphics.Rect;\r\n\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class RecyclerDecoration extends RecyclerView.ItemDecoration {\r\n\r\n    private final int divHeight;\r\n\r\n    @Override\r\n    public void getItemOffsets(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {\r\n        super.getItemOffsets(outRect, view, parent, state);\r\n        if(parent.getChildAdapterPosition(view)!=parent.getAdapter().getItemCount() -1)\r\n            outRect.bottom=divHeight;\r\n    }\r\n\r\n    public RecyclerDecoration(int divHeight) {\r\n        this.divHeight = divHeight;\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/RecyclerDecoration.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/decoration/RecyclerDecoration.java	(date 1618046936527)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.decoration;
 
 import android.graphics.Rect;
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/RecordAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.bumptech.glide.Glide;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class RecordAdapter extends RecyclerView.Adapter<RecordAdapter.ItemViewHolder> {\r\n\r\n\r\nprivate Context mContext;\r\n    private ArrayList<Record_Item> mItems;\r\n    private ArrayList<Record_Item> arrayList;\r\n\r\n    public RecordAdapter(Context mContext, ArrayList<Record_Item> items) {\r\n      this.mContext =mContext;\r\n        mItems = items;\r\n        arrayList = new ArrayList<Record_Item>();\r\n        arrayList.addAll(mItems);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ItemViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.record_item,viewGroup,false);\r\n        return new ItemViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ItemViewHolder itemViewHolder, final int i) {\r\n        if (mItems.get(i).getImage() == null) {\r\n            itemViewHolder.imageView.setVisibility(View.GONE);\r\n        } else {\r\n            Bitmap bmp = BitmapFactory.decodeByteArray(mItems.get(i).getImage(), 0, mItems.get(i).getImage().length);\r\n            Glide.with(itemViewHolder.imageView.getContext()).load(bmp).override(300,300).into(itemViewHolder.imageView);\r\n        }\r\n        itemViewHolder.contents.setText(mItems.get(i).getContent());\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return mItems.size();\r\n    }\r\n\r\n\r\n    class ItemViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        private TextView contents;\r\n        private ImageView imageView;\r\n        public ItemViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            contents = (TextView)itemView.findViewById(R.id.contents);\r\n            imageView = (ImageView)itemView.findViewById(R.id.book_image);\r\n        }\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/RecordAdapter.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/adapter/RecordAdapter.java	(date 1618046155934)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.adapter;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -11,6 +11,8 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
+import com.example.choimyeongsik.BookBank.R;
+import com.example.choimyeongsik.BookBank.model.RecordVo;
 
 import java.util.ArrayList;
 
@@ -21,13 +23,13 @@
 
 
 private Context mContext;
-    private ArrayList<Record_Item> mItems;
-    private ArrayList<Record_Item> arrayList;
+    private ArrayList<RecordVo> mItems;
+    private ArrayList<RecordVo> arrayList;
 
-    public RecordAdapter(Context mContext, ArrayList<Record_Item> items) {
+    public RecordAdapter(Context mContext, ArrayList<RecordVo> items) {
       this.mContext =mContext;
         mItems = items;
-        arrayList = new ArrayList<Record_Item>();
+        arrayList = new ArrayList<RecordVo>();
         arrayList.addAll(mItems);
     }
 
Index: app/src/main/java/com/example/choimyeongsik/BookBank/BestBookVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.choimyeongsik.BookBank;\r\n\r\npublic class BestBookVO {\r\n    private String best_isbn13;\r\n    private String best_bookimageURL;\r\n    public BestBookVO() {\r\n\r\n    }\r\n    public BestBookVO(String best_isbn13, String best_bookimageURL) {\r\n        this.best_bookimageURL = best_bookimageURL;\r\n        this.best_isbn13 = best_isbn13;\r\n    }\r\n\r\n    public String getBest_isbn13() {\r\n        return best_isbn13;\r\n    }\r\n\r\n    public void setBest_isbn13(String best_isbn13) {\r\n        this.best_isbn13 = best_isbn13;\r\n    }\r\n\r\n    public String getBest_bookimageURL() {\r\n        return best_bookimageURL;\r\n    }\r\n\r\n    public void setBest_bookimageURL(String best_bookimageURL) {\r\n        this.best_bookimageURL = best_bookimageURL;\r\n    }\r\n}\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/example/choimyeongsik/BookBank/BestBookVO.java	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/src/main/java/com/example/choimyeongsik/BookBank/model/BestBookVO.java	(date 1618045953537)
@@ -1,4 +1,4 @@
-package com.example.choimyeongsik.BookBank;
+package com.example.choimyeongsik.BookBank.model;
 
 public class BestBookVO {
     private String best_isbn13;
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 28\r\n    defaultConfig {\r\n        applicationId \"com.lagro.choimyeongsik.BookBank\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 28\r\n        versionCode 2\r\n        versionName \"2.0\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n        packagingOptions {\r\n            pickFirst 'META-INF/proguard/androidx-annotations.pro'\r\n            exclude 'META-INF/proguard/coroutines.pro'\r\n        }\r\n\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    def appcompat_version = \"1.1.0\"\r\n    def glide_version = \"4.8.0\"\r\n    def fragment_version = \"1.2.1\"\r\n    // Java language implementation\r\n    implementation \"androidx.fragment:fragment:$fragment_version\"\r\n    // Kotlin\r\n    implementation \"androidx.fragment:fragment-ktx:$fragment_version\"\r\n    // Testing Fragments in Isolation\r\n    implementation \"androidx.fragment:fragment-testing:$fragment_version\"\r\n    implementation \"com.github.bumptech.glide:glide:$glide_version\"\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    annotationProcessor \"com.github.bumptech.glide:compiler:$glide_version\"\r\n    implementation \"androidx.appcompat:appcompat:$appcompat_version\"\r\n    // For loading and tinting drawables on older versions of the platform\r\n    implementation \"androidx.appcompat:appcompat-resources:$appcompat_version\"\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n    implementation group: project.KAKAO_SDK_GROUP, name: 'usermgmt', version: project.KAKAO_SDK_VERSION\r\n    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'\r\n    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'\r\n    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\"\r\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    implementation 'com.github.chrisbanes:PhotoView:2.1.4'\r\n    implementation 'org.jsoup:jsoup:1.13.1'\r\n    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'\r\n    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'\r\n    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'\r\n    implementation 'com.android.support:recyclerview-v7:28.0.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    implementation 'com.daasuu:CountAnimationTextView:0.1.2'\r\n    implementation 'com.github.ybq:Android-SpinKit:1.4.0'\r\n    implementation 'com.google.android.gms:play-services:12.0.1'\r\n    implementation 'com.google.android.gms:play-services-ads:12.0.1'\r\n}\r\nandroid {\r\n    packagingOptions {\r\n        exclude 'META-INF/proguard/androidx-annotations.pro'\r\n        exclude 'META-INF/proguard/coroutines.pro'\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision bc36cc6df0426f3e3436c5a6f2809c1ff8699c65)
+++ app/build.gradle	(date 1617955050045)
@@ -30,13 +30,7 @@
     def fragment_version = "1.2.1"
     // Java language implementation
     implementation "androidx.fragment:fragment:$fragment_version"
-    // Kotlin
-    implementation "androidx.fragment:fragment-ktx:$fragment_version"
-    // Testing Fragments in Isolation
-    implementation "androidx.fragment:fragment-testing:$fragment_version"
-    implementation "com.github.bumptech.glide:glide:$glide_version"
     implementation 'androidx.appcompat:appcompat:1.1.0'
-    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
     implementation "androidx.appcompat:appcompat:$appcompat_version"
     // For loading and tinting drawables on older versions of the platform
     implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
@@ -44,25 +38,30 @@
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.1'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
+    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
+    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
+
+    //카카오
     implementation group: project.KAKAO_SDK_GROUP, name: 'usermgmt', version: project.KAKAO_SDK_VERSION
-    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'
-    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'
-    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
+    //카드뷰
     implementation "androidx.cardview:cardview:1.0.0"
+    //리사이클러뷰
     implementation "androidx.recyclerview:recyclerview:1.1.0"
     implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"
+    implementation 'com.google.android.material:material:1.1.0'
+
+    //깃허브
     implementation 'com.github.bumptech.glide:glide:4.9.0'
-    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
     implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
     implementation 'com.github.chrisbanes:PhotoView:2.1.4'
-    implementation 'org.jsoup:jsoup:1.13.1'
+    // Json
     implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'
     implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'
     implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
-    implementation 'com.android.support:recyclerview-v7:28.0.0'
-    implementation 'com.google.android.material:material:1.1.0'
+
+
+    implementation 'org.jsoup:jsoup:1.13.1'
     implementation 'com.daasuu:CountAnimationTextView:0.1.2'
-    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
     implementation 'com.google.android.gms:play-services:12.0.1'
     implementation 'com.google.android.gms:play-services-ads:12.0.1'
 }
diff --git app/src/main/res/drawable/ic_launcher_new_background.xml app/src/main/res/drawable/ic_launcher_new_background.xml
